{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/movie-fanatic-club/src/components/inTheater.js\";\nimport React, { useState, Component } from 'react';\nimport { Row, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'reactstrap';\nimport { FaImdb } from \"react-icons/fa\";\nimport rp from \"request-promise\";\nimport cheerio from \"cheerio\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: []\n    };\n  }\n\n  componentDidMount() {\n    // use the request-promise library to fetch the HTML from pokemon.org\n    rp(\"https://pokedex.org/\").then(html => {\n      let names = [];\n      let $ = cheerio.load(html); // find what element ids, classes, or tags you want from opening console in the browser\n      // cheerio library lets you select elements similar to querySelector\n\n      $(\"#monsters-list li span\").each(function (i, element) {\n        let name = $(this).prepend().text();\n        names.push(name);\n      });\n      this.setState({\n        names\n      });\n    }).catch(function (err) {\n      console.log(\"crawl failed\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.names.map(name => {\n      return React.createElement(\"li\", {\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, name);\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lishi/Desktop/movie-fanatic-club/src/components/inTheater.js"],"names":["React","useState","Component","Row","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Carousel","CarouselItem","CarouselControl","CarouselIndicators","CarouselCaption","FaImdb","rp","cheerio","App","constructor","props","state","names","componentDidMount","then","html","$","load","each","i","element","name","prepend","text","push","setState","catch","err","console","log","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SACEC,GADF,EAEEC,IAFF,EAEQC,OAFR,EAEiBC,QAFjB,EAE2BC,QAF3B,EAGEC,SAHF,EAGaC,YAHb,EAG2BC,MAH3B,EAIEC,QAJF,EAKEC,YALF,EAMEC,eANF,EAOEC,kBAPF,EAQEC,eARF,QASO,YATP;AAUA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AAExBkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACAP,IAAAA,EAAE,CAAC,sBAAD,CAAF,CACGQ,IADH,CACQC,IAAI,IAAI;AACZ,UAAIH,KAAK,GAAG,EAAZ;AACA,UAAII,CAAC,GAAGT,OAAO,CAACU,IAAR,CAAaF,IAAb,CAAR,CAFY,CAIZ;AACA;;AACAC,MAAAA,CAAC,CAAC,wBAAD,CAAD,CAA4BE,IAA5B,CAAiC,UAASC,CAAT,EAAYC,OAAZ,EAAqB;AACpD,YAAIC,IAAI,GAAGL,CAAC,CAAC,IAAD,CAAD,CACRM,OADQ,GAERC,IAFQ,EAAX;AAGAX,QAAAA,KAAK,CAACY,IAAN,CAAWH,IAAX;AACD,OALD;AAOA,WAAKI,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AACD,KAfH,EAgBGc,KAhBH,CAgBS,UAASC,GAAT,EAAc;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAlBH;AAmBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,GAAjB,CAAqBV,IAAI,IAAI;AAC5B,aAAO;AAAI,QAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgBA,IAAhB,CAAP;AACD,KAFA,CADH,CADF,CADF;AASD;;AAxCuB;;AA2C1B,eAAeb,GAAf","sourcesContent":["import React, {useState, Component} from 'react';\nimport {\n  Row,\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button,\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\nimport { FaImdb } from \"react-icons/fa\";\nimport rp from \"request-promise\";\nimport cheerio from \"cheerio\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {names: []};\n    }\n  \n    componentDidMount() {\n      // use the request-promise library to fetch the HTML from pokemon.org\n      rp(\"https://pokedex.org/\")\n        .then(html => {\n          let names = [];\n          let $ = cheerio.load(html);\n  \n          // find what element ids, classes, or tags you want from opening console in the browser\n          // cheerio library lets you select elements similar to querySelector\n          $(\"#monsters-list li span\").each(function(i, element) {\n            let name = $(this)\n              .prepend()\n              .text();\n            names.push(name);\n          });\n  \n          this.setState({ names });\n        })\n        .catch(function(err) {\n          console.log(\"crawl failed\");\n        });\n    }\n  \n    render() {\n      return (\n        <div>\n          <ul>\n            {this.state.names.map(name => {\n              return <li key={name}>{name}</li>;\n            })}\n          </ul>\n        </div>\n      );\n    }\n  }\n  \n  export default App;"]},"metadata":{},"sourceType":"module"}