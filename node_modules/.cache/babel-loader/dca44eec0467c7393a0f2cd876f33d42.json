{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/movie-fanatic-club/src/components/inTheater.js\";\nimport React, { Component } from 'react';\nimport { Row, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'reactstrap';\nimport { FaImdb } from \"react-icons/fa\";\nimport Icon from 'react-fa';\nimport rp from \"request-promise\";\nimport cheerio from \"cheerio\";\nimport Carousels, { Dots } from '@brainhubeu/react-carousel';\n\nclass InTheater extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 0,\n      names: []\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    // use the request-promise library to fetch the HTML from pokemon.org\n    rp(\"https://cors-anywhere.herokuapp.com/https://www.imdb.com/search/title/?title_type=feature&user_rating=7.0,&groups=now-playing-us\").then(html => {\n      let titles = [];\n      let $ = cheerio.load(html); // find what element ids, classes, or tags you want from opening console in the browser\n      // cheerio library lets you select elements similar to querySelector\n\n      $(\".lister-item-header a\").each(function (i, element) {\n        let name = $(this).prepend().text();\n        titles.push(name);\n      });\n      this.setState({\n        names\n      });\n    }).catch(function (err) {\n      console.log(\"crawl failed\");\n    });\n  }\n\n  onChange(value) {\n    this.setState({\n      value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"carousel-inners\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"In Theater\")), React.createElement(Carousels, {\n      value: this.state.value,\n      onChange: this.onChange,\n      arrowLeft: React.createElement(Icon, {\n        name: \"angle-double-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      arrowLeftDisabled: React.createElement(Icon, {\n        name: \"angle-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      arrowRight: React.createElement(Icon, {\n        name: \"angle-double-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      arrowRightDisabled: React.createElement(Icon, {\n        name: \"angle-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      addArrowClickHandler: true,\n      clickToChange: true,\n      slidesPerPage: 3,\n      infinite: true,\n      className: \"carousel-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.names.map(item => {\n      return React.createElement(Card, {\n        key: item,\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://m.media-amazon.com/images/M/MV5BMTFiNDlmOTMtZGM5MC00OWQzLWE4YmYtZDBlY2NiZDMyNGNlXkEyXkFqcGdeQXVyMTkxNjUyNQ@@._V1_SY1000_CR0,0,677,1000_AL_.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, item), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(FaImdb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Director: \")));\n    })));\n  }\n\n}\n\nexport default InTheater;","map":{"version":3,"sources":["/home/lishi/Desktop/movie-fanatic-club/src/components/inTheater.js"],"names":["React","Component","Row","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Carousel","CarouselItem","CarouselControl","CarouselIndicators","CarouselCaption","FaImdb","Icon","rp","cheerio","Carousels","Dots","InTheater","constructor","state","value","names","onChange","bind","componentDidMount","then","html","titles","$","load","each","i","element","name","prepend","text","push","setState","catch","err","console","log","render","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n  Row,\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button,\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\nimport { FaImdb } from \"react-icons/fa\";\nimport Icon from 'react-fa';\nimport rp from \"request-promise\";\nimport cheerio from \"cheerio\";\nimport Carousels, { Dots } from '@brainhubeu/react-carousel';\n\nclass InTheater extends Component {\n\n    constructor() {\n        super()\n        this.state = { \n            value: 0,\n            names: []\n        };\n        this.onChange = this.onChange.bind(this);\n      }\n\n      componentDidMount() {\n        // use the request-promise library to fetch the HTML from pokemon.org\n        rp(\"https://cors-anywhere.herokuapp.com/https://www.imdb.com/search/title/?title_type=feature&user_rating=7.0,&groups=now-playing-us\")\n          .then(html => {\n            let titles= [];\n            let $ = cheerio.load(html);\n    \n            // find what element ids, classes, or tags you want from opening console in the browser\n            // cheerio library lets you select elements similar to querySelector\n            $(\".lister-item-header a\").each(function(i, element) {\n              let name = $(this)\n                .prepend()\n                .text();\n                titles.push(name);\n            });\n\n            this.setState({ names });\n\n          })\n          .catch(function(err) {\n            console.log(\"crawl failed\");\n          });\n      }\n    \n      onChange(value) {\n        this.setState({ value });\n      }\n    \n      render() {\n        return (\n        <div className=\"carousel-inners\">\n            <h2 className=\"section-title\"><a href=\"/\">In Theater</a></h2>\n            <Carousels\n                value={this.state.value}\n                onChange={this.onChange}\n                arrowLeft={<Icon name=\"angle-double-left\" />}\n                arrowLeftDisabled={<Icon name=\"angle-left\" />}\n                arrowRight={<Icon name=\"angle-double-right\" />}\n                arrowRightDisabled={<Icon name=\"angle-right\" />}\n                addArrowClickHandler\n                clickToChange\n                slidesPerPage={3}\n                infinite\n                className=\"carousel-item\"\n            >\n            \n                    {this.state.names.map(item => {\n                        return(<Card key={item} className=\"card\">\n                            <img src='https://m.media-amazon.com/images/M/MV5BMTFiNDlmOTMtZGM5MC00OWQzLWE4YmYtZDBlY2NiZDMyNGNlXkEyXkFqcGdeQXVyMTkxNjUyNQ@@._V1_SY1000_CR0,0,677,1000_AL_.jpg' />\n                            <CardBody>\n                                <CardTitle className=\"card-title\">{item}</CardTitle>\n                                <CardSubtitle><FaImdb /></CardSubtitle>\n                                <CardSubtitle>Director: </CardSubtitle>\n                                {/*<CardText>{item.intro}</CardText>\n                                <Button>Button</Button>*/}\n                            </CardBody>\n                        </Card>);\n                    })}\n                    \n                   \n            </Carousels>\n        </div>\n        );\n      }\n  }\n\n\n  \n  export default InTheater;"]},"metadata":{},"sourceType":"module"}