{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molli\\\\Desktop\\\\full-stack\\\\movie-fanatic-club\\\\movie-fanatic-club\\\\src\\\\components\\\\Watchlist.js\";\n// body component for a user's watchlist\nimport React from \"react\";\nimport \"../index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\nimport firebase, { DocumentReference, DocumentSnapshot } from \"firebase\";\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, TabContent, TabPane, Nav, NavItem, Row, Col, Media, Button } from \"reactstrap\";\nimport { FaImdb } from \"react-icons/fa\";\nimport { TiMediaFastForward, TiEqualsOutline } from \"react-icons/ti\";\nimport Icon from \"react-fa\";\nimport rp from \"request-promise\";\nimport cheerio from \"cheerio\";\nimport Carousel from \"@brainhubeu/react-carousel\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\nimport ComingSoon from \"./comingSoon\";\nimport classnames from \"classnames\";\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      apis: [],\n      dates: [],\n      activeTab: \"\"\n    };\n    this.handleWatchlist = this.handleWatchlist.bind(this);\n  }\n\n  async componentDidMount() {\n    if (auth.currentUser != null) {\n      var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n      docRef.get().then(function (doc) {\n        if (doc.exists) {\n          console.log(\"watchlist:\", doc.data().watchlist);\n          console.log(\"length of watchlist:\", doc.data().watchlist.length);\n          let APIs = [];\n\n          for (let i = 0; i < doc.data().watchlist.length; i++) {\n            let name = doc.data().watchlist[i];\n            const URL = \"http://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\n            fetch(URL).then(result => result.json()).then(result => {\n              // if (result.results.length == 0) {\n              //   throw \"Failed to retrieve\";\n              // }\n              console.log(\"api call result: \", result);\n              APIs.push(result); //return result.results;\n            });\n          }\n\n          this.setState({\n            apis: [...this.state.apis, ...APIs]\n          });\n          console.log(\"APIS is: \", APIs);\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n    } else {\n      console.log(\"currentUser is null\");\n    }\n  }\n\n  handleWatchlist() {} // below I added a link back to the landing page, just to make our lives easier while testing\n  // we'll remove it when we actually build the events page, since users won't need to go back to\n  // the landing page\n\n\n  render() {\n    const toggle = tab => {\n      if (this.state.activeTab !== tab) this.setState({\n        activeTab: tab\n      });\n    };\n\n    var tabNames = [];\n    console.log(\"data inside render is:\", this.state.apis);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Watchlist\"), React.createElement(\"div\", {\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.apis.map(data => {\n      console.log(\"DATA INSIDE MAP IS: \", data);\n      return React.createElement(Col, {\n        sm: \"6\",\n        key: data.Title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Media, {\n        className: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Media, {\n        left: true,\n        className: \"media-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://www.imdb.com/title/\" + data.imdbID,\n        title: \"link\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"media-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: data.Title,\n        src: data.Poster,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))), React.createElement(Media, {\n        body: true,\n        className: \"cards-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: {\n          pathname: \"./Movie\",\n          id: data.imdbID\n        },\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, data.Title)), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, data.Rated, \" | \", data.Runtime, \" | \", data.Genre, \" |\", \" \", data.Released), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Director: \", data.Director), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Actors: \", data.Actors), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Plot: \", data.Plot))));\n    }))));\n  }\n\n}\n\nexport default Watchlist;","map":{"version":3,"sources":["C:/Users/molli/Desktop/full-stack/movie-fanatic-club/movie-fanatic-club/src/components/Watchlist.js"],"names":["React","NavLink","auth","db","firebase","DocumentReference","DocumentSnapshot","Card","CardText","CardBody","CardTitle","CardSubtitle","TabContent","TabPane","Nav","NavItem","Row","Col","Media","Button","FaImdb","TiMediaFastForward","TiEqualsOutline","Icon","rp","cheerio","Carousel","ComingSoon","classnames","Watchlist","Component","constructor","props","state","value","apis","dates","activeTab","handleWatchlist","bind","componentDidMount","currentUser","docRef","collection","doc","email","get","then","exists","console","log","data","watchlist","length","APIs","i","name","URL","fetch","result","json","push","setState","catch","error","render","toggle","tab","tabNames","map","Title","imdbID","Poster","pathname","id","Rated","Runtime","Genre","Released","Director","Actors","Plot"],"mappings":"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","sourcesContent":["// body component for a user's watchlist\r\n\r\nimport React from \"react\";\r\nimport \"../index.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { auth, db } from \"./Firebase\";\r\nimport firebase, { DocumentReference, DocumentSnapshot } from \"firebase\";\r\n\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  Row,\r\n  Col,\r\n  Media,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { FaImdb } from \"react-icons/fa\";\r\nimport { TiMediaFastForward, TiEqualsOutline } from \"react-icons/ti\";\r\nimport Icon from \"react-fa\";\r\nimport rp from \"request-promise\";\r\nimport cheerio from \"cheerio\";\r\nimport Carousel from \"@brainhubeu/react-carousel\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport ComingSoon from \"./comingSoon\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Watchlist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n      apis: [],\r\n      dates: [],\r\n      activeTab: \"\"\r\n    };\r\n    this.handleWatchlist = this.handleWatchlist.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (auth.currentUser != null) {\r\n      var docRef = db.collection(\"user\").doc(auth.currentUser.email);\r\n\r\n      docRef\r\n        .get()\r\n        .then(function(doc) {\r\n          if (doc.exists) {\r\n            console.log(\"watchlist:\", doc.data().watchlist);\r\n\r\n            console.log(\"length of watchlist:\", doc.data().watchlist.length);\r\n\r\n            let APIs = [];\r\n            for (let i = 0; i < doc.data().watchlist.length; i++) {\r\n              let name = doc.data().watchlist[i];\r\n              const URL = \"http://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\r\n              fetch(URL)\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                  // if (result.results.length == 0) {\r\n                  //   throw \"Failed to retrieve\";\r\n                  // }\r\n                  console.log(\"api call result: \", result);\r\n                  APIs.push(result);\r\n                  //return result.results;\r\n                });\r\n            }\r\n            this.setState({\r\n              apis: [...this.state.apis, ...APIs]\r\n            });\r\n            console.log(\"APIS is: \", APIs);\r\n          } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    } else {\r\n      console.log(\"currentUser is null\");\r\n    }\r\n  }\r\n\r\n  handleWatchlist() {}\r\n\r\n  // below I added a link back to the landing page, just to make our lives easier while testing\r\n  // we'll remove it when we actually build the events page, since users won't need to go back to\r\n  // the landing page\r\n  render() {\r\n    const toggle = tab => {\r\n      if (this.state.activeTab !== tab) this.setState({ activeTab: tab });\r\n    };\r\n\r\n    var tabNames = [];\r\n\r\n    console.log(\"data inside render is:\", this.state.apis);\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"section-title\">Watchlist</h2>\r\n\r\n        <div className=\"tabs\">\r\n          <Row>\r\n            {this.state.apis.map(data => {\r\n              console.log(\"DATA INSIDE MAP IS: \", data);\r\n              return (\r\n                <Col sm=\"6\" key={data.Title}>\r\n                  <Media className=\"media-body\">\r\n                    <Media left className=\"media-pic\">\r\n                      <a\r\n                        href={\"https://www.imdb.com/title/\" + data.imdbID}\r\n                        title=\"link\"\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                        className=\"media-pic\"\r\n                      >\r\n                        <img alt={data.Title} src={data.Poster} />\r\n                      </a>\r\n                    </Media>\r\n                    <Media body className=\"cards-body\">\r\n                      <CardTitle>\r\n                        <NavLink\r\n                          to={{\r\n                            pathname: \"./Movie\",\r\n                            id: data.imdbID\r\n                          }}\r\n                          className=\"card-title\"\r\n                        >\r\n                          {data.Title}\r\n                        </NavLink>\r\n                      </CardTitle>\r\n                      <CardSubtitle>\r\n                        {data.Rated} | {data.Runtime} | {data.Genre} |{\" \"}\r\n                        {data.Released}\r\n                      </CardSubtitle>\r\n                      <CardText>Director: {data.Director}</CardText>\r\n                      <CardText>Actors: {data.Actors}</CardText>\r\n                      <CardText>Plot: {data.Plot}</CardText>\r\n                    </Media>\r\n                  </Media>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Watchlist;\r\n"]},"metadata":{},"sourceType":"module"}