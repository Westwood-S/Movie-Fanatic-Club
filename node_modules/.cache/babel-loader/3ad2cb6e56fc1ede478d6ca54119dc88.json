{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Watchlist.js\";\n// body component for a user's watchlist\nimport React from \"react\";\nimport \"../index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\nimport firebase from \"firebase\";\nimport { FiFileMinus, FiFilePlus } from \"react-icons/fi\";\nimport { CardText, CardTitle, CardSubtitle, Row, Col, Media } from \"reactstrap\";\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      apis: [],\n      dates: [],\n      activeTab: \"\",\n      isAdd: true\n    };\n    this.setAPIState = this.setAPIState.bind(this);\n    this.removeFromWatchList = this.render.bind(this);\n  }\n\n  removeFromWatchList() {\n    var watchlistRef = db.collection(\"user\").doc(auth.currentUser.email);\n    watchlistRef.update({\n      watchlist: firebase.firestore.FieldValue.arrayRemove(this.state.movie.id)\n    });\n  }\n\n  setAPIState(APIs) {\n    this.setState({\n      apis: [...this.state.apis, APIs]\n    });\n  }\n\n  async componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        let currentComponent = this;\n        var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n        docRef.get().then(function (doc) {\n          if (doc.exists) {\n            for (let i = 0; i < doc.data().watchlist.length; i++) {\n              let name = doc.data().watchlist[i];\n              const URL = \"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\n              fetch(URL).then(result => result.json()).then(result => {\n                currentComponent.setAPIState(result);\n              });\n            }\n          } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        });\n      } else {\n        console.log(\"cannot find user in watchlist\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"watchlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Watchlist\"), React.createElement(\"div\", {\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.apis.map(data => {\n      return React.createElement(Col, {\n        xl: \"6\",\n        key: data.Title,\n        className: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Media, {\n        className: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Media, {\n        left: true,\n        className: \"media-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://www.imdb.com/title/\" + data.imdbID,\n        title: \"imdb express\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"media-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: data.Title,\n        src: data.Poster,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(Media, {\n        body: true,\n        className: \"cards-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: {\n          pathname: \"./Movie\",\n          id: data.imdbID\n        },\n        className: \"card-title\",\n        title: \"this is it\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, data.Title, \" \", this.state.isAdd ? React.createElement(\"a\", {\n        onClick: this.removeFromWatchList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FiFileMinus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })) : React.createElement(\"button\", {\n        onClick: this.addToWatchList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FiFilePlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })))), React.createElement(CardSubtitle, {\n        className: \"card-subtitles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, data.Rated, \" | \", data.Runtime, \" | \", data.Genre, \" |\", \" \", data.Released), React.createElement(CardText, {\n        className: \"watchlist-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Director: \", data.Director), React.createElement(CardText, {\n        className: \"watchlist-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Actors: \", data.Actors), React.createElement(CardText, {\n        className: \"watchlist-plot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Plot: \", data.Plot))));\n    }))));\n  }\n\n}\n\nexport default Watchlist;","map":{"version":3,"sources":["/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Watchlist.js"],"names":["React","NavLink","auth","db","firebase","FiFileMinus","FiFilePlus","CardText","CardTitle","CardSubtitle","Row","Col","Media","Watchlist","Component","constructor","props","state","value","apis","dates","activeTab","isAdd","setAPIState","bind","removeFromWatchList","render","watchlistRef","collection","doc","currentUser","email","update","watchlist","firestore","FieldValue","arrayRemove","movie","id","APIs","setState","componentDidMount","onAuthStateChanged","user","currentComponent","docRef","get","then","exists","i","data","length","name","URL","fetch","result","json","console","log","catch","error","map","Title","imdbID","Poster","pathname","addToWatchList","Rated","Runtime","Genre","Released","Director","Actors","Plot"],"mappings":"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","sourcesContent":["// body component for a user's watchlist\n\nimport React from \"react\";\nimport \"../index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\nimport firebase from \"firebase\";\nimport { FiFileMinus, FiFilePlus } from \"react-icons/fi\";\nimport {\n  CardText,\n  CardTitle,\n  CardSubtitle,\n  Row,\n  Col,\n  Media\n} from \"reactstrap\";\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      apis: [],\n      dates: [],\n      activeTab: \"\",\n      isAdd: true\n    };\n    this.setAPIState = this.setAPIState.bind(this);\n    this.removeFromWatchList = this.render.bind(this);\n  }\n\n  removeFromWatchList(){\n    var watchlistRef = db.collection(\"user\").doc(auth.currentUser.email);\n    watchlistRef.update({\n      watchlist: firebase.firestore.FieldValue.arrayRemove(this.state.movie.id)\n    });\n  }\n\n  setAPIState(APIs){\n    this.setState({ apis: [...this.state.apis, APIs] });\n  }\n\n  async componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        let currentComponent = this;\n        var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n          docRef\n            .get()\n            .then(function(doc) {\n              if (doc.exists) {\n                for (let i = 0; i < doc.data().watchlist.length; i++) {\n                  let name = doc.data().watchlist[i];\n                  const URL = \"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\n                  fetch(URL)\n                    .then(result => result.json())\n                    .then(result => {\n                      currentComponent.setAPIState(result);\n                    });\n                }\n              } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n              }\n            })\n            .catch(function(error) {\n              console.log(\"Error getting document:\", error);\n            });\n      }\n      else {\n        console.log (\"cannot find user in watchlist\")\n      }\n    })\n        \n    \n  }\n\n  render() {\n    return (\n      <div className=\"watchlist\">\n        <h2 className=\"section-title\">Watchlist</h2>\n\n        <div className=\"tabs\">\n          <Row>\n            {this.state.apis.map(data => {\n              return (\n                <Col xl=\"6\" key={data.Title} className>\n                  <Media className=\"media-body\">\n                    <Media left className=\"media-pic\">\n                      <a\n                        href={\"https://www.imdb.com/title/\" + data.imdbID}\n                        title=\"imdb express\"\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                        className=\"media-pic\"\n                      >\n                        <img alt={data.Title} src={data.Poster} />\n                      </a>\n                    </Media>\n                    <Media body className=\"cards-body\">\n                      <CardTitle>\n                        <NavLink\n                          to={{\n                            pathname: \"./Movie\",\n                            id: data.imdbID\n                          }}\n                          className=\"card-title\"\n                          title=\"this is it\"\n                        >\n                          {data.Title} {this.state.isAdd?<a onClick={this.removeFromWatchList}><FiFileMinus /></a>:<button onClick={this.addToWatchList}><FiFilePlus /></button>}\n                        </NavLink>\n                      </CardTitle>\n                      <CardSubtitle className=\"card-subtitles\">\n                        {data.Rated} | {data.Runtime} | {data.Genre} |{\" \"}\n                        {data.Released}\n                      </CardSubtitle>\n                      <CardText className=\"watchlist-info\">Director: {data.Director}</CardText>\n                      <CardText className=\"watchlist-info\">Actors: {data.Actors}</CardText>\n                      <CardText className=\"watchlist-plot\">Plot: {data.Plot}</CardText>\n                    </Media>\n                  </Media>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Watchlist;\n"]},"metadata":{},"sourceType":"module"}