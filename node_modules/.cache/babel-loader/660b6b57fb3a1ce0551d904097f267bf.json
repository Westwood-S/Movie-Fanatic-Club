{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Movie.js\";\n// body component for loading stuff about an individual movie\n// when the user clicks on it\nimport React from \"react\";\nimport \"../index.css\";\nimport { Media, Container, Row, Button } from \"reactstrap\";\nimport { TiPlusOutline, TiMinusOutline } from \"react-icons/ti\";\nimport { auth, db } from \"./Firebase\";\nimport firebase from \"firebase\";\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      movies: {},\n      loading: true,\n      isAdd: false,\n      thisMovie: \"\",\n      isMounted: false\n    };\n    this.addToWatchlist = this.addToWatchlist.bind(this);\n    this.removeFromWatchlist = this.removeFromWatchlist.bind(this);\n  }\n\n  addToWatchlist() {\n    var watchlistRef = db.collection(\"user\").doc(auth.currentUser.email);\n    watchlistRef.update({\n      watchlist: firebase.firestore.FieldValue.arrayUnion(this.state.movie.id)\n    });\n    alert(\"adding to watchlist\");\n    this.setWatchList = this.setWatchList.bind(this);\n    this.checkExists = this.checkExists.bind(this);\n  }\n\n  removeFromWatchlist() {\n    var watchlistRef = db.collection(\"user\").doc(auth.currentUser.email);\n    watchlistRef.update({\n      watchlist: firebase.firestore.FieldValue.arrayRemove(this.state.movie.id)\n    });\n    alert(\"removing from watchlist\");\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true\n    });\n    fetch(\"https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/\" + this.props.location.id, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c3bfcbae69msh2fefac5f7da67adp1d2687jsnade70055f49b\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        this.setState({\n          movie: data,\n          thisMovie: data.id\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    fetch(\"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + this.props.location.id).then(response => {\n      response.json().then(data => {\n        this.setState({\n          movies: data\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    auth.onAuthStateChanged(user => {\n      let currentState = this;\n\n      if (user && currentState.state.isMounted) {\n        var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n        docRef.get().then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          var index = newWatchlist.indexOf(thisMovie);\n\n          if (index > -1) {\n            console.log(\"has that\");\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        });\n      }\n    });\n  }\n  /* checkExists(id) {\n    if (this.state.isAdd === \"false\") {\n      console.log(\"isadd\")\n      db.collection(\"user\")\n        .doc(auth.currentUser.email)\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          var index = newWatchlist.indexOf(id)\n          if (index > -1) {\n            this.setState({\n              isAdd: true\n            })\n          }\n         })\n        .catch(function (error) {\n          console.log(error)\n        })\n       this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n  } */\n\n\n  setWatchList(id) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email);\n\n    if (this.state.isAdd) {\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        var index = newWatchlist.indexOf(id);\n\n        if (index > -1) {\n          newWatchlist.splice(index, 1);\n        }\n\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        isAdd: !this.state.isAdd\n      });\n    } else {\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        newWatchlist.push(id);\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        isAdd: !this.state.isAdd\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Container, {\n      key: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.movie ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      title: \"if u stan imdb...\",\n      className: \"movie-title\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      href: \"https://www.imdb.com/title/\" + this.state.movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.movie.title, \" (\", this.state.movie.year, \")\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.movie.poster ? React.createElement(\"a\", {\n      title: \"trailer is here!\",\n      className: \"movie-title\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      href: this.state.movie.trailer ? this.state.movie.trailer.link : \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"movie-actual-poster\",\n      alt: this.state.movie.title,\n      src: this.state.movie.poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })) : \"\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"directed by: \", this.state.movies.Director)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.state.movies.Rated, \" | \", this.state.movies.Runtime, \" | \", this.state.movies.Released)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.movies.Country, \" | \", this.state.movies.Language)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"IMDb rating: \", this.state.movies.imdbRating, \" | Metascore: \", this.state.movies.Metascore)), this.state.movies.Production ? React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"this.state.movies.Production\")) : \"\", React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"AWARDS: \", this.state.movies.Awards)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"PLOT: \", this.state.movies.Plot)), this.state.movie.cast ? this.state.movie.cast.map(item => {\n      return React.createElement(Row, {\n        key: \"yay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"movie-actor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        title: \"visit fav actor\",\n        className: \"movie-actor-link\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        href: 'https://www.imdb.com/name/' + item.actor_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, item.actor), \" as \", item.character));\n    }) : \"\", React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.setWatchList(this.state.movie.id);\n      },\n      className: \"movie-rl-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.state.isAdd ? React.createElement(TiMinusOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }) : React.createElement(TiPlusOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), \"watchlist\")))) : React.createElement(Media, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"wait a sec bru\"));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Movie.js"],"names":["React","Media","Container","Row","Button","TiPlusOutline","TiMinusOutline","auth","db","firebase","Movie","Component","constructor","props","state","movie","movies","loading","isAdd","thisMovie","isMounted","addToWatchlist","bind","removeFromWatchlist","watchlistRef","collection","doc","currentUser","email","update","watchlist","firestore","FieldValue","arrayUnion","id","alert","setWatchList","checkExists","arrayRemove","componentDidMount","setState","fetch","location","method","headers","then","response","json","data","catch","err","console","log","onAuthStateChanged","user","currentState","docRef","get","newWatchlist","index","indexOf","error","userRef","splice","push","render","title","year","poster","trailer","link","Director","Rated","Runtime","Released","Country","Language","imdbRating","Metascore","Production","Awards","Plot","cast","map","item","actor_id","actor","character"],"mappings":"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","sourcesContent":["// body component for loading stuff about an individual movie\n// when the user clicks on it\n\nimport React from \"react\";\nimport \"../index.css\";\nimport { Media, Container, Row, Button } from \"reactstrap\";\nimport { TiPlusOutline, TiMinusOutline } from \"react-icons/ti\";\nimport { auth, db } from \"./Firebase\";\nimport firebase from \"firebase\";\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      movies: {},\n      loading: true,\n      isAdd: false,\n      thisMovie: \"\",\n      isMounted: false\n    };\n\n    this.addToWatchlist = this.addToWatchlist.bind(this);\n    this.removeFromWatchlist = this.removeFromWatchlist.bind(this);\n  }\n\n  addToWatchlist() {\n    var watchlistRef = db.collection(\"user\").doc(auth.currentUser.email);\n    watchlistRef.update({\n      watchlist: firebase.firestore.FieldValue.arrayUnion(this.state.movie.id)\n    });\n    alert(\"adding to watchlist\");\n    this.setWatchList = this.setWatchList.bind(this)\n    this.checkExists = this.checkExists.bind(this)\n  }\n\n  removeFromWatchlist() {\n    var watchlistRef = db.collection(\"user\").doc(auth.currentUser.email);\n    watchlistRef.update({\n      watchlist: firebase.firestore.FieldValue.arrayRemove(this.state.movie.id)\n    });\n    alert(\"removing from watchlist\");\n  }\n\n  componentDidMount() {\n    this.setState({ isMounted: true })\n\n    fetch(\n      \"https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/\" +\n      this.props.location.id,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\":\n            \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"c3bfcbae69msh2fefac5f7da67adp1d2687jsnade70055f49b\"\n        }\n      }\n    )\n      .then(response => {\n        response.json().then(data => {\n          this.setState({\n            movie: data,\n            thisMovie: data.id\n          })\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    fetch(\n      \"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + this.props.location.id\n    )\n      .then(response => {\n        response.json().then(data => {\n          this.setState({\n            movies: data\n          })\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    auth.onAuthStateChanged(user => {\n      let currentState = this\n      if (user && currentState.state.isMounted) {\n        var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n          docRef\n            .get()\n            .then(function (doc) {\n              var newWatchlist = doc.data().watchlist;\n              var index = newWatchlist.indexOf(thisMovie)\n              if (index > -1) {\n                console.log(\"has that\")\n              }\n    \n            })\n            .catch(function(error) {\n              console.log(\"Error getting document:\", error);\n            });\n      }\n    })\n  }\n\n\n  /* checkExists(id) {\n    if (this.state.isAdd === \"false\") {\n      console.log(\"isadd\")\n      db.collection(\"user\")\n        .doc(auth.currentUser.email)\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          var index = newWatchlist.indexOf(id)\n          if (index > -1) {\n            this.setState({\n              isAdd: true\n            })\n          }\n\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n\n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n  } */\n\n  setWatchList(id) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email)\n    if (this.state.isAdd) {\n      userRef\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          var index = newWatchlist.indexOf(id)\n          if (index > -1) {\n            newWatchlist.splice(index, 1)\n          }\n          userRef.update({\n            watchlist: newWatchlist\n          })\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n\n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n    else {\n      userRef\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          newWatchlist.push(id)\n          userRef.update({\n            watchlist: newWatchlist\n          })\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n\n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n  }\n\n  render() {\n\n    return (\n      <Container key=\"\">\n        {this.state.movie ?\n          <div>\n            <Row>\n              <a title=\"if u stan imdb...\" className=\"movie-title\" rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://www.imdb.com/title/\" + this.state.movie.id}>{this.state.movie.title} ({this.state.movie.year})</a>\n            </Row>\n            <Row>\n              <div className=\"movie-poster\">\n                {this.state.movie.poster ?\n                  <a title=\"trailer is here!\" className=\"movie-title\" rel=\"noopener noreferrer\" target=\"_blank\" href={this.state.movie.trailer ? this.state.movie.trailer.link : \"/\"}>\n                    <img className=\"movie-actual-poster\" alt={this.state.movie.title} src={this.state.movie.poster} />\n                  </a>\n                  : \"\"}\n\n              </div>\n            </Row>\n            <Row><div className=\"movie-director\">directed by: {this.state.movies.Director}</div></Row>\n            <Row><div className=\"movie-info\">{this.state.movies.Rated} | {this.state.movies.Runtime} | {this.state.movies.Released}</div></Row>\n            <Row><div className=\"movie-info\">{this.state.movies.Country} | {this.state.movies.Language}</div></Row>\n            <Row><div className=\"movie-info\">IMDb rating: {this.state.movies.imdbRating} | Metascore: {this.state.movies.Metascore}</div></Row>\n            {this.state.movies.Production ?\n              <Row><div className=\"movie-director\">this.state.movies.Production</div></Row> : \"\"}\n            <Row><div className=\"movie-info\">AWARDS: {this.state.movies.Awards}</div></Row>\n            <Row><div className=\"movie-info\">PLOT: {this.state.movies.Plot}</div></Row>\n            {this.state.movie.cast ?\n              this.state.movie.cast.map(item => {\n                return (\n                  <Row key=\"yay\"><div className=\"movie-actor\">\n                    <a title=\"visit fav actor\" className=\"movie-actor-link\" rel=\"noopener noreferrer\" target=\"_blank\" href={'https://www.imdb.com/name/' + item.actor_id}>{item.actor}</a> as {item.character}\n                  </div></Row>\n                )\n              })\n              : \"\"}\n            <Row>\n              <div className=\"movie-btn\">\n                <Button\n                  onClick={() => {\n                    this.setWatchList(this.state.movie.id)\n                  }}\n                  className=\"movie-rl-btn\">{this.state.isAdd ? <TiMinusOutline /> : <TiPlusOutline />}\n                watchlist\n              </Button>\n\n              </div>\n            </Row>\n          </div>\n          : <Media>wait a sec bru</Media>}\n      </Container>\n    );\n  }\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}