{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Movie.js\";\n// body component for loading stuff about an individual movie\n// when the user clicks on it\nimport React from \"react\";\nimport \"../index.css\";\nimport { Media, Container, Row, Col } from 'reactstrap';\nimport { NavLink } from \"react-router-dom\";\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      movies: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/\" + this.props.location.id, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c3bfcbae69msh2fefac5f7da67adp1d2687jsnade70055f49b\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        this.setState({\n          movie: data\n        });\n        console.log(this.state.movie);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    fetch('https://www.omdbapi.com/?apikey=1e54e73e&i=' + this.props.location.id).then(response => {\n      response.json().then(data => {\n        this.setState({\n          movies: data\n        });\n        console.log(this.state.movies);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } // below I added a link back to the landing page, just to make our lives easier while testing\n  // we'll remove it when we actually build the events page, since users won't need to go back to\n  // the landing page\n\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.movie ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      title: \"if u stan imdb...\",\n      className: \"movie-title\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      href: \"https://www.imdb.com/title/\" + this.state.movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.movie.title, \" (\", this.state.movie.year, \")\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"movie-actual-poster\",\n      alt: this.state.movie.title,\n      src: this.state.movie.poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), React.createElement(Media, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Media, {\n      body: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Media, {\n      heading: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Media heading\"), \"Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\"))) : React.createElement(Media, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"wait a sec bru\"));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Movie.js"],"names":["React","Media","Container","Row","Col","NavLink","Movie","Component","constructor","props","state","movie","movies","loading","componentDidMount","fetch","location","id","then","response","json","data","setState","console","log","catch","err","render","title","year","poster"],"mappings":"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","sourcesContent":["// body component for loading stuff about an individual movie\n// when the user clicks on it\n\nimport React from \"react\";\nimport \"../index.css\";\nimport { Media, Container, Row, Col } from 'reactstrap';\nimport { NavLink } from \"react-router-dom\";\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      movies: {},\n      loading: true\n    };\n  }\n\n  componentDidMount(){\n    fetch(\"https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/\"+this.props.location.id, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"c3bfcbae69msh2fefac5f7da67adp1d2687jsnade70055f49b\"\n            }\n    })\n    .then(response => {\n      response.json().then (data =>{\n          this.setState({\n            movie: data\n          }) \n          console.log(this.state.movie)\n      })\n    })\n    .catch(err => {\n        console.log(err);\n    }); \n\n    fetch('https://www.omdbapi.com/?apikey=1e54e73e&i='+this.props.location.id)\n    .then(response => {\n      response.json().then (data =>{\n          this.setState({\n            movies: data\n          })\n          console.log(this.state.movies)\n      })\n    })\n    .catch(err => {\n        console.log(err);\n    }); \n  }\n  \n  // below I added a link back to the landing page, just to make our lives easier while testing\n  // we'll remove it when we actually build the events page, since users won't need to go back to\n  // the landing page\n  render() {\n    return (\n      <Container>\n        {this.state.movie? \n        <div>\n          <Row>\n            <a title=\"if u stan imdb...\" className=\"movie-title\" rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://www.imdb.com/title/\"+this.state.movie.id}>{this.state.movie.title} ({this.state.movie.year})</a>\n          </Row>\n          <Row>\n            <div className=\"movie-poster\">\n              <img className=\"movie-actual-poster\" alt={this.state.movie.title} src={this.state.movie.poster}/>\n            </div>\n          </Row>\n        <Media>\n          \n        <Media body>\n          <Media heading>\n            Media heading\n          </Media>\n          Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\n        </Media></Media></div>: <Media>wait a sec bru</Media>}\n      </Container>\n    );\n  }\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}