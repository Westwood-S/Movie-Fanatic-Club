{"ast":null,"code":"var inverseXML = getInverseObj(require(\"../maps/xml.json\")),\n    xmlReplacer = getInverseReplacer(inverseXML);\nexports.XML = getInverse(inverseXML, xmlReplacer);\nvar inverseHTML = getInverseObj(require(\"../maps/entities.json\")),\n    htmlReplacer = getInverseReplacer(inverseHTML);\nexports.HTML = getInverse(inverseHTML, htmlReplacer);\n\nfunction getInverseObj(obj) {\n  return Object.keys(obj).sort().reduce(function (inverse, name) {\n    inverse[obj[name]] = \"&\" + name + \";\";\n    return inverse;\n  }, {});\n}\n\nfunction getInverseReplacer(inverse) {\n  var single = [],\n      multiple = [];\n  Object.keys(inverse).forEach(function (k) {\n    if (k.length === 1) {\n      single.push(\"\\\\\" + k);\n    } else {\n      multiple.push(k);\n    }\n  }); //TODO add ranges\n\n  multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n  return new RegExp(multiple.join(\"|\"), \"g\");\n}\n\nvar re_nonASCII = /[^\\0-\\x7F]/g,\n    re_astralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction singleCharReplacer(c) {\n  return \"&#x\" + c.charCodeAt(0).toString(16).toUpperCase() + \";\";\n}\n\nfunction astralReplacer(c) {\n  // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n  var high = c.charCodeAt(0);\n  var low = c.charCodeAt(1);\n  var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\n  return \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\n}\n\nfunction getInverse(inverse, re) {\n  function func(name) {\n    return inverse[name];\n  }\n\n  return function (data) {\n    return data.replace(re, func).replace(re_astralSymbols, astralReplacer).replace(re_nonASCII, singleCharReplacer);\n  };\n}\n\nvar re_xmlChars = getInverseReplacer(inverseXML);\n\nfunction escapeXML(data) {\n  return data.replace(re_xmlChars, singleCharReplacer).replace(re_astralSymbols, astralReplacer).replace(re_nonASCII, singleCharReplacer);\n}\n\nexports.escape = escapeXML;","map":{"version":3,"sources":["C:/Users/molli/Desktop/full-stack/movie-fanatic-club/movie-fanatic-club/node_modules/cheerio/node_modules/entities/lib/encode.js"],"names":["inverseXML","getInverseObj","require","xmlReplacer","getInverseReplacer","exports","XML","getInverse","inverseHTML","htmlReplacer","HTML","obj","Object","keys","sort","reduce","inverse","name","single","multiple","forEach","k","length","push","unshift","join","RegExp","re_nonASCII","re_astralSymbols","singleCharReplacer","c","charCodeAt","toString","toUpperCase","astralReplacer","high","low","codePoint","re","func","data","replace","re_xmlChars","escapeXML","escape"],"mappings":"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","sourcesContent":["var inverseXML = getInverseObj(require(\"../maps/xml.json\")),\r\n    xmlReplacer = getInverseReplacer(inverseXML);\r\n\r\nexports.XML = getInverse(inverseXML, xmlReplacer);\r\n\r\nvar inverseHTML = getInverseObj(require(\"../maps/entities.json\")),\r\n    htmlReplacer = getInverseReplacer(inverseHTML);\r\n\r\nexports.HTML = getInverse(inverseHTML, htmlReplacer);\r\n\r\nfunction getInverseObj(obj) {\r\n    return Object.keys(obj)\r\n        .sort()\r\n        .reduce(function(inverse, name) {\r\n            inverse[obj[name]] = \"&\" + name + \";\";\r\n            return inverse;\r\n        }, {});\r\n}\r\n\r\nfunction getInverseReplacer(inverse) {\r\n    var single = [],\r\n        multiple = [];\r\n\r\n    Object.keys(inverse).forEach(function(k) {\r\n        if (k.length === 1) {\r\n            single.push(\"\\\\\" + k);\r\n        } else {\r\n            multiple.push(k);\r\n        }\r\n    });\r\n\r\n    //TODO add ranges\r\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\r\n\r\n    return new RegExp(multiple.join(\"|\"), \"g\");\r\n}\r\n\r\nvar re_nonASCII = /[^\\0-\\x7F]/g,\r\n    re_astralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\n\r\nfunction singleCharReplacer(c) {\r\n    return (\r\n        \"&#x\" +\r\n        c\r\n            .charCodeAt(0)\r\n            .toString(16)\r\n            .toUpperCase() +\r\n        \";\"\r\n    );\r\n}\r\n\r\nfunction astralReplacer(c) {\r\n    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\r\n    var high = c.charCodeAt(0);\r\n    var low = c.charCodeAt(1);\r\n    var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;\r\n    return \"&#x\" + codePoint.toString(16).toUpperCase() + \";\";\r\n}\r\n\r\nfunction getInverse(inverse, re) {\r\n    function func(name) {\r\n        return inverse[name];\r\n    }\r\n\r\n    return function(data) {\r\n        return data\r\n            .replace(re, func)\r\n            .replace(re_astralSymbols, astralReplacer)\r\n            .replace(re_nonASCII, singleCharReplacer);\r\n    };\r\n}\r\n\r\nvar re_xmlChars = getInverseReplacer(inverseXML);\r\n\r\nfunction escapeXML(data) {\r\n    return data\r\n        .replace(re_xmlChars, singleCharReplacer)\r\n        .replace(re_astralSymbols, astralReplacer)\r\n        .replace(re_nonASCII, singleCharReplacer);\r\n}\r\n\r\nexports.escape = escapeXML;\r\n"]},"metadata":{},"sourceType":"script"}