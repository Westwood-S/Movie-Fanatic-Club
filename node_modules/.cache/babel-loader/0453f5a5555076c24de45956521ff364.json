{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Watchlist.js\";\n// body component for a user's watchlist\nimport React from \"react\";\nimport \"../index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\nimport { FiFileMinus, FiFilePlus } from \"react-icons/fi\";\nimport { CardText, CardTitle, CardSubtitle, Row, Col, Media } from \"reactstrap\";\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      apis: [],\n      dates: [],\n      activeTab: \"\",\n      isAdd: true,\n      removeButton: []\n    };\n    this.setAPIState = this.setAPIState.bind(this);\n    this.setWatchList = this.setWatchList.bind(this);\n  }\n\n  setAPIState(APIs) {\n    this.setState({\n      apis: [...this.state.apis, APIs]\n    });\n  }\n\n  setWatchList(id, index) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email);\n    let removeButtonList = this.state.removeButton;\n\n    if (this.state.isAdd) {\n      removeButtonList.push(index);\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        var index = newWatchlist.indexOf(id);\n\n        if (index > -1) {\n          newWatchlist.splice(index, 1);\n        }\n\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        isAdd: !this.state.isAdd\n      });\n    } else {\n      var addIndex = removeButtonList.indexOf(index);\n\n      if (addIndex > -1) {\n        removeButtonList.splice(addIndex, 1);\n      }\n\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        newWatchlist.push(id);\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        isAdd: !this.state.isAdd\n      });\n    }\n\n    this.setState({\n      removeButton: removeButtonList\n    });\n  }\n\n  async componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        let currentComponent = this;\n        var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n        docRef.get().then(function (doc) {\n          if (doc.exists) {\n            for (let i = 0; i < doc.data().watchlist.length; i++) {\n              let name = doc.data().watchlist[i];\n              const URL = \"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\n              fetch(URL).then(result => result.json()).then(result => {\n                currentComponent.setAPIState(result);\n              });\n            }\n          } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        });\n      } else {\n        console.log(\"cannot find user in watchlist\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"watchlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Watchlist\"), React.createElement(\"div\", {\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.state.apis.map((data, index) => {\n      return React.createElement(Col, {\n        xl: \"6\",\n        key: data.Title,\n        className: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Media, {\n        className: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Media, {\n        left: true,\n        className: \"media-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://www.imdb.com/title/\" + data.imdbID,\n        title: \"imdb express\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"media-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: data.Title,\n        src: data.Poster,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))), React.createElement(Media, {\n        body: true,\n        className: \"cards-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"watchlist-btn\",\n        onClick: () => {\n          this.setWatchList(data.imdbID, index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.state.removeButton.indexOf(index) === -1 ? React.createElement(FiFileMinus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }) : React.createElement(FiFilePlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(NavLink, {\n        to: {\n          pathname: \"./Movie\",\n          id: data.imdbID\n        },\n        className: \"card-title\",\n        title: \"this is it\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, data.Title)), React.createElement(CardSubtitle, {\n        className: \"card-subtitles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, data.Rated, \" | \", data.Runtime, \" | \", data.Genre, \" |\", \" \", data.Released), React.createElement(CardText, {\n        className: \"watchlist-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Director: \", data.Director), React.createElement(CardText, {\n        className: \"watchlist-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Actors: \", data.Actors), React.createElement(CardText, {\n        className: \"watchlist-plot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Plot: \", data.Plot))));\n    }))));\n  }\n\n}\n\nexport default Watchlist;","map":{"version":3,"sources":["/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Watchlist.js"],"names":["React","NavLink","auth","db","FiFileMinus","FiFilePlus","CardText","CardTitle","CardSubtitle","Row","Col","Media","Watchlist","Component","constructor","props","state","value","apis","dates","activeTab","isAdd","removeButton","setAPIState","bind","setWatchList","APIs","setState","id","index","userRef","collection","doc","currentUser","email","removeButtonList","push","get","then","newWatchlist","data","watchlist","indexOf","splice","update","catch","error","console","log","addIndex","componentDidMount","onAuthStateChanged","user","currentComponent","docRef","exists","i","length","name","URL","fetch","result","json","render","map","Title","imdbID","Poster","pathname","Rated","Runtime","Genre","Released","Director","Actors","Plot"],"mappings":"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","sourcesContent":["// body component for a user's watchlist\n\nimport React from \"react\";\nimport \"../index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\nimport { FiFileMinus, FiFilePlus } from \"react-icons/fi\";\nimport {\n  CardText,\n  CardTitle,\n  CardSubtitle,\n  Row,\n  Col,\n  Media\n} from \"reactstrap\";\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      apis: [],\n      dates: [],\n      activeTab: \"\",\n      isAdd: true,\n      removeButton: []\n    };\n    this.setAPIState = this.setAPIState.bind(this);\n    this.setWatchList = this.setWatchList.bind(this);\n  }\n\n  setAPIState(APIs){\n    this.setState({ apis: [...this.state.apis, APIs] });\n  }\n\n  setWatchList(id, index) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email)\n    let removeButtonList = this.state.removeButton\n    if (this.state.isAdd) {\n      removeButtonList.push(index)\n      userRef\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          var index = newWatchlist.indexOf(id)\n          if (index > -1) {\n            newWatchlist.splice(index, 1)\n          }\n          userRef.update({\n            watchlist: newWatchlist\n          })\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n\n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n    else {\n      var addIndex = removeButtonList.indexOf(index)\n      if (addIndex > -1) {\n            removeButtonList.splice(addIndex, 1)\n      }\n      userRef\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          newWatchlist.push(id)\n          userRef.update({\n            watchlist: newWatchlist\n          })\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n\n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n    this.setState({removeButton: removeButtonList})\n  }\n\n  async componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        let currentComponent = this;\n        var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n          docRef\n            .get()\n            .then(function(doc) {\n              if (doc.exists) {\n                for (let i = 0; i < doc.data().watchlist.length; i++) {\n                  let name = doc.data().watchlist[i];\n                  const URL = \"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\n                  fetch(URL)\n                    .then(result => result.json())\n                    .then(result => {\n                      currentComponent.setAPIState(result);\n                    });\n                }\n              } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n              }\n            })\n            .catch(function(error) {\n              console.log(\"Error getting document:\", error);\n            });\n      }\n      else {\n        console.log (\"cannot find user in watchlist\")\n      }\n    })\n        \n    \n  }\n\n  render() {\n\n\n    return (\n      <div className=\"watchlist\">\n        <h2 className=\"section-title\">Watchlist</h2>\n\n        <div className=\"tabs\">\n          <Row>\n            {this.state.apis.map((data,index) => {\n              \n              return (\n                <Col xl=\"6\" key={data.Title} className>\n                  <Media className=\"media-body\">\n                    <Media left className=\"media-pic\">\n                      <a\n                        href={\"https://www.imdb.com/title/\" + data.imdbID}\n                        title=\"imdb express\"\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                        className=\"media-pic\"\n                      >\n                        <img alt={data.Title} src={data.Poster} />\n                      </a>\n                    </Media>\n                    <Media body className=\"cards-body\">\n                      <CardTitle>\n                        <button \n                          className=\"watchlist-btn\" \n                          onClick={() => {\n                            this.setWatchList(data.imdbID, index)\n                          }}\n                        >\n                          {this.state.removeButton.indexOf(index)===-1?<FiFileMinus />:<FiFilePlus />}\n                        </button>\n                        <NavLink\n                          to={{\n                            pathname: \"./Movie\",\n                            id: data.imdbID\n                          }}\n                          className=\"card-title\"\n                          title=\"this is it\"\n                        >\n                          {data.Title} \n                          \n                        </NavLink>\n                      </CardTitle>\n                      <CardSubtitle className=\"card-subtitles\">\n                        {data.Rated} | {data.Runtime} | {data.Genre} |{\" \"}\n                        {data.Released}\n                      </CardSubtitle>\n                      <CardText className=\"watchlist-info\">Director: {data.Director}</CardText>\n                      <CardText className=\"watchlist-info\">Actors: {data.Actors}</CardText>\n                      <CardText className=\"watchlist-plot\">Plot: {data.Plot}</CardText>\n                    </Media>\n                  </Media>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Watchlist;\n"]},"metadata":{},"sourceType":"module"}