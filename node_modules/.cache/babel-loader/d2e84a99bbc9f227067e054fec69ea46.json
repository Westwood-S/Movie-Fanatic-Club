{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molli\\\\Desktop\\\\full-stack\\\\movie-fanatic-club\\\\movie-fanatic-club\\\\src\\\\components\\\\Movie.js\";\n// body component for loading stuff about an individual movie\n// when the user clicks on it\nimport React from \"react\";\nimport \"../index.css\";\nimport { Media, Container, Row, Button } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { TiPlusOutline, TiMinusOutline } from \"react-icons/ti\";\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      movies: {},\n      loading: true\n    };\n    this.addToWatchlist = this.addToWatchlist.bind(this);\n  }\n\n  addToWatchlist() {\n    alert(\"adding to watchlist\");\n  }\n\n  componentDidMount() {\n    fetch(\"https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/\" + this.props.location.id, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c3bfcbae69msh2fefac5f7da67adp1d2687jsnade70055f49b\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        this.setState({\n          movie: data\n        });\n        console.log(this.state.movie);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    fetch(\"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + this.props.location.id).then(response => {\n      response.json().then(data => {\n        this.setState({\n          movies: data\n        });\n        console.log(this.state.movies);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } // below I added a link back to the landing page, just to make our lives easier while testing\n  // we'll remove it when we actually build the events page, since users won't need to go back to\n  // the landing page\n\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.movie ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      title: \"if u stan imdb...\",\n      className: \"movie-title\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      href: \"https://www.imdb.com/title/\" + this.state.movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.movie.title, \" (\", this.state.movie.year, \")\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      title: \"trailer is here!\",\n      className: \"movie-title\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      href: this.state.movie.trailer ? this.state.movie.trailer.link : \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"movie-actual-poster\",\n      alt: this.state.movie.title,\n      src: this.state.movie.poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"directed by: \", this.state.movies.Director)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.movies.Rated, \" | \", this.state.movies.Runtime, \" |\", \" \", this.state.movies.Released)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.movies.Country, \" | \", this.state.movies.Language)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"IMDb rating: \", this.state.movies.imdbRating, \" | Metascore:\", \" \", this.state.movies.Metascore)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.movies.Production ? this.state.movies.Production : \"\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"AWARDS: \", this.state.movies.Awards)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"PLOT: \", this.state.movies.Plot)), this.state.movie.cast ? this.state.movie.cast.map(item => {\n      return React.createElement(Row, {\n        key: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"movie-actor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"movie-actor-link\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        href: \"https://www.imdb.com/name/\" + item.actor_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, item.actor), \" \", \"as \", item.character));\n    }) : \"\", React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"movie-rl-btn\",\n      onClick: () => {\n        this.addToWatchlist();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(TiPlusOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), \" watchlist\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      className: \"movie-rl-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(TiMinusOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), \" watchlist\")))) : React.createElement(Media, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"wait a sec bru\"));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["C:/Users/molli/Desktop/full-stack/movie-fanatic-club/movie-fanatic-club/src/components/Movie.js"],"names":["React","Media","Container","Row","Button","NavLink","TiPlusOutline","TiMinusOutline","Movie","Component","constructor","props","state","movie","movies","loading","addToWatchlist","bind","alert","componentDidMount","fetch","location","id","method","headers","then","response","json","data","setState","console","log","catch","err","render","title","year","trailer","link","poster","Director","Rated","Runtime","Released","Country","Language","imdbRating","Metascore","Production","Awards","Plot","cast","map","item","actor_id","actor","character"],"mappings":"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","sourcesContent":["// body component for loading stuff about an individual movie\r\n// when the user clicks on it\r\n\r\nimport React from \"react\";\r\nimport \"../index.css\";\r\nimport { Media, Container, Row, Button } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { TiPlusOutline, TiMinusOutline } from \"react-icons/ti\";\r\n\r\nclass Movie extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movie: {},\r\n      movies: {},\r\n      loading: true\r\n    };\r\n\r\n    this.addToWatchlist = this.addToWatchlist.bind(this);\r\n  }\r\n\r\n  addToWatchlist() {\r\n    alert(\"adding to watchlist\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/\" +\r\n        this.props.location.id,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\":\r\n            \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": \"c3bfcbae69msh2fefac5f7da67adp1d2687jsnade70055f49b\"\r\n        }\r\n      }\r\n    )\r\n      .then(response => {\r\n        response.json().then(data => {\r\n          this.setState({\r\n            movie: data\r\n          });\r\n          console.log(this.state.movie);\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n    fetch(\r\n      \"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + this.props.location.id\r\n    )\r\n      .then(response => {\r\n        response.json().then(data => {\r\n          this.setState({\r\n            movies: data\r\n          });\r\n          console.log(this.state.movies);\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // below I added a link back to the landing page, just to make our lives easier while testing\r\n  // we'll remove it when we actually build the events page, since users won't need to go back to\r\n  // the landing page\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.movie ? (\r\n          <div>\r\n            <Row>\r\n              <a\r\n                title=\"if u stan imdb...\"\r\n                className=\"movie-title\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                href={\"https://www.imdb.com/title/\" + this.state.movie.id}\r\n              >\r\n                {this.state.movie.title} ({this.state.movie.year})\r\n              </a>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"movie-poster\">\r\n                <a\r\n                  title=\"trailer is here!\"\r\n                  className=\"movie-title\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                  href={\r\n                    this.state.movie.trailer\r\n                      ? this.state.movie.trailer.link\r\n                      : \"/\"\r\n                  }\r\n                >\r\n                  <img\r\n                    className=\"movie-actual-poster\"\r\n                    alt={this.state.movie.title}\r\n                    src={this.state.movie.poster}\r\n                  />\r\n                </a>\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"movie-director\">\r\n                directed by: {this.state.movies.Director}\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"movie-info\">\r\n                {this.state.movies.Rated} | {this.state.movies.Runtime} |{\" \"}\r\n                {this.state.movies.Released}\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"movie-info\">\r\n                {this.state.movies.Country} | {this.state.movies.Language}\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"movie-info\">\r\n                IMDb rating: {this.state.movies.imdbRating} | Metascore:{\" \"}\r\n                {this.state.movies.Metascore}\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"movie-director\">\r\n                {this.state.movies.Production\r\n                  ? this.state.movies.Production\r\n                  : \"\"}\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"movie-info\">\r\n                AWARDS: {this.state.movies.Awards}\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"movie-info\">PLOT: {this.state.movies.Plot}</div>\r\n            </Row>\r\n            {this.state.movie.cast\r\n              ? this.state.movie.cast.map(item => {\r\n                  return (\r\n                    <Row key=\"\">\r\n                      <div className=\"movie-actor\">\r\n                        <a\r\n                          className=\"movie-actor-link\"\r\n                          rel=\"noopener noreferrer\"\r\n                          target=\"_blank\"\r\n                          href={\"https://www.imdb.com/name/\" + item.actor_id}\r\n                        >\r\n                          {item.actor}\r\n                        </a>{\" \"}\r\n                        as {item.character}\r\n                      </div>\r\n                    </Row>\r\n                  );\r\n                })\r\n              : \"\"}\r\n\r\n            <Row>\r\n              <div className=\"movie-btn\">\r\n                <Button\r\n                  className=\"movie-rl-btn\"\r\n                  onClick={() => {\r\n                    this.addToWatchlist();\r\n                  }}\r\n                >\r\n                  <TiPlusOutline /> watchlist\r\n                </Button>\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <div className=\"movie-btn\">\r\n                {\" \"}\r\n                <Button className=\"movie-rl-btn\">\r\n                  <TiMinusOutline /> watchlist\r\n                </Button>\r\n              </div>\r\n            </Row>\r\n          </div>\r\n        ) : (\r\n          <Media>wait a sec bru</Media>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}