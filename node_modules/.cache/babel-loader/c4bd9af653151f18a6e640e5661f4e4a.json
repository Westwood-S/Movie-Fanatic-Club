{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/comingSoon.js\";\nimport React, { Component } from \"react\";\nimport { CardText, CardTitle, CardSubtitle, TabContent, TabPane, Nav, NavItem, Row, Col, Media } from \"reactstrap\";\nimport classnames from 'classnames';\nimport rp from \"request-promise\";\nimport cheerio from \"cheerio\";\nimport { FiPlusSquare, FiMinusSquare } from \"react-icons/fi\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\n\nclass ComingSoon extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 0,\n      dates: [],\n      activeTab: \"\",\n      apis: [],\n      isSignedIn: false,\n      removeButton: []\n    };\n    this.handleWatchlist = this.handleWatchlist.bind(this);\n    this.setWatchList = this.setWatchList.bind(this);\n  }\n\n  async componentDidMount() {\n    await rp(\"https://cors-anywhere.herokuapp.com/https://www.imdb.com/calendar?region=US&ref_=rlm\").then(html => {\n      let dates = [],\n          apis = [];\n      let $ = cheerio.load(html);\n      $(\"#main h4\").each(function () {\n        let date = $(this).prepend().text();\n        dates.push(date);\n      });\n      this.setState({\n        dates: dates\n      });\n      $(\"#main ul li a\").each(function () {\n        let name = $(this).attr(\"href\");\n        let link = name.match(/(?<=title\\/)[\\s\\S]*?(?=\\/)/g);\n        fetch(\"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + link[0]).then(response => {\n          response.json().then(data => {\n            apis.push(data);\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n      this.setState({\n        apis: apis\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  setWatchList(id) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email);\n    let removeButtonList = this.state.removeButton;\n\n    if (removeButtonList.indexOf(id) > -1) {\n      var addIndex = removeButtonList.indexOf(id);\n\n      if (addIndex > -1) {\n        removeButtonList.splice(addIndex, 1);\n      }\n\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        var index = newWatchlist.indexOf(id);\n\n        if (index > -1) {\n          newWatchlist.splice(index, 1);\n        }\n\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      removeButtonList.push(id);\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        newWatchlist.push(id);\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    this.setState({\n      removeButton: removeButtonList\n    });\n  }\n\n  handleWatchlist() {}\n\n  render() {\n    const toggle = tab => {\n      if (this.state.activeTab !== tab) this.setState({\n        activeTab: tab\n      });\n    };\n\n    var tabNames = [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-titles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Coming Sooooooon\"), React.createElement(\"div\", {\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      tabs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.dates.map(item => {\n      const tabName = item.split(\" \")[1].slice(0, 3) + \" \" + item.split(\" \")[2];\n      if (tabNames.includes(tabName)) return \"\";else {\n        tabNames.push(tabName);\n        return React.createElement(NavItem, {\n          key: item,\n          className: \"nav-items\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: classnames({\n            active: this.state.activeTab === tabName\n          }),\n          onClick: () => {\n            toggle(tabName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"tab-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, tabName)));\n      }\n    })), React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, tabNames.map(item => {\n      return React.createElement(TabPane, {\n        tabId: item,\n        key: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.state.apis.filter(data => data.Released.slice(3, 11) === item).map(data => {\n        if (this.state.isSignedIn) {\n          var currentButtonList = this.state.removeButton;\n          var currentState = this;\n          db.collection(\"user\").doc(auth.currentUser.email).get().then(function (doc) {\n            var newWatchlist = doc.data().watchlist;\n            var addIndex = newWatchlist.indexOf(data.imdbID);\n\n            if (addIndex > -1) {\n              currentButtonList.push(data.imdbID);\n              currentState.setState({\n                removeButton: currentButtonList\n              });\n            }\n          }).catch(function (error) {\n            console.log(\"Error getting document:\", error);\n          });\n        }\n\n        return React.createElement(Col, {\n          xl: \"6\",\n          key: data.Title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(Media, {\n          className: \"media-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, React.createElement(Media, {\n          left: true,\n          className: \"media-pic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"https://www.imdb.com/title/\" + data.imdbID,\n          title: \"none clickbait\",\n          rel: \"noopener noreferrer\",\n          target: \"_blank\",\n          className: \"media-pic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: data.Title,\n          src: data.Poster,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }))), React.createElement(Media, {\n          body: true,\n          className: \"cards-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: {\n            pathname: \"./Movie\",\n            id: data.imdbID\n          },\n          className: \"card-title\",\n          title: \"more info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, data.Title), this.state.isSignedIn ? React.createElement(\"button\", {\n          className: \"watchlist-btn\",\n          onClick: () => {\n            this.setWatchList(data.imdbID);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, this.state.removeButton.indexOf(data.imdbID) === -1 ? React.createElement(FiPlusSquare, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }) : React.createElement(FiMinusSquare, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        })) : \"\"), React.createElement(CardSubtitle, {\n          className: \"card-subtitles\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, data.Rated, \" | \", data.Runtime, \" | \", data.Genre, \" |\", \" \", data.Released), React.createElement(CardText, {\n          className: \"comingsoon-Card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Director: \", data.Director), React.createElement(CardText, {\n          className: \"comingsoon-Card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, \"Actors: \", data.Actors), React.createElement(CardText, {\n          className: \"comingsoon-Plot\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, \"Plot: \", data.Plot))));\n      })));\n    }))));\n  }\n\n}\n\nexport default ComingSoon;","map":{"version":3,"sources":["/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/comingSoon.js"],"names":["React","Component","CardText","CardTitle","CardSubtitle","TabContent","TabPane","Nav","NavItem","Row","Col","Media","classnames","rp","cheerio","FiPlusSquare","FiMinusSquare","NavLink","auth","db","ComingSoon","constructor","state","value","dates","activeTab","apis","isSignedIn","removeButton","handleWatchlist","bind","setWatchList","componentDidMount","then","html","$","load","each","date","prepend","text","push","setState","name","attr","link","match","fetch","response","json","data","catch","err","console","log","id","userRef","collection","doc","currentUser","email","removeButtonList","indexOf","addIndex","splice","get","newWatchlist","watchlist","index","update","error","render","toggle","tab","tabNames","map","item","tabName","split","slice","includes","active","filter","Released","currentButtonList","currentState","imdbID","Title","Poster","pathname","Rated","Runtime","Genre","Director","Actors","Plot"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  CardText,\n  CardTitle,\n  CardSubtitle,\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  Row,\n  Col,\n  Media\n} from \"reactstrap\";\nimport classnames from 'classnames';\nimport rp from \"request-promise\";\nimport cheerio from \"cheerio\";\nimport { FiPlusSquare, FiMinusSquare } from \"react-icons/fi\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\n\nclass ComingSoon extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: 0,\n      dates: [],\n      activeTab: \"\",\n      apis: [],\n      isSignedIn: false,\n      removeButton: []\n    };\n\n    this.handleWatchlist = this.handleWatchlist.bind(this);\n    this.setWatchList = this.setWatchList.bind(this);\n  }\n\n  async componentDidMount() {\n    await rp(\n      \"https://cors-anywhere.herokuapp.com/https://www.imdb.com/calendar?region=US&ref_=rlm\"\n    )\n      .then(html => {\n        let dates = [],\n          apis = [];\n        let $ = cheerio.load(html);\n\n        $(\"#main h4\").each(function () {\n          let date = $(this)\n            .prepend()\n            .text();\n\n          dates.push(date);\n        });\n        this.setState({\n          dates: dates\n        });\n\n        $(\"#main ul li a\").each(function () {\n          let name = $(this).attr(\"href\");\n          let link = name.match(/(?<=title\\/).*?(?=\\/)/gs);\n\n          fetch(\"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + link[0])\n            .then(response => {\n              response.json().then(data => {\n                apis.push(data);\n              });\n            })\n            .catch(err => {\n              console.log(err);\n            });\n        });\n        this.setState({\n          apis: apis\n        });\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }\n\n  setWatchList(id){\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email)\n    let removeButtonList = this.state.removeButton\n    if (removeButtonList.indexOf(id) > -1) {\n      var addIndex = removeButtonList.indexOf(id)\n      if (addIndex > -1) {\n            removeButtonList.splice(addIndex, 1)\n      }\n      userRef\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          var index = newWatchlist.indexOf(id)\n          if (index > -1) {\n            newWatchlist.splice(index, 1)\n          }\n          userRef.update({\n            watchlist: newWatchlist\n          })\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    }\n    else {\n      removeButtonList.push(id)\n      userRef\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          newWatchlist.push(id)\n          userRef.update({\n            watchlist: newWatchlist\n          })\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    }\n    this.setState({removeButton: removeButtonList})\n  }\n\n  handleWatchlist() { }\n\n  render() {\n    const toggle = tab => {\n      if (this.state.activeTab !== tab) this.setState({ activeTab: tab });\n    };\n\n    var tabNames = [];\n\n    return (\n      <div>\n        <h2 className=\"section-titles\">Coming Sooooooon</h2>\n        <div className=\"tabs\">\n          <Nav tabs>\n            {this.state.dates.map(item => {\n              const tabName =\n                item.split(\" \")[1].slice(0, 3) + \" \" + item.split(\" \")[2];\n              if (tabNames.includes(tabName)) return \"\";\n              else {\n                tabNames.push(tabName);\n                return (\n                  <NavItem key={item} className=\"nav-items\">\n                    <a\n                      className={classnames({\n                        active: this.state.activeTab === tabName\n                      })}\n                      onClick={() => {\n                        toggle(tabName);\n                      }}\n                    >\n                      <button className=\"tab-btn\">{tabName}</button>\n                    </a>\n                  </NavItem>\n                );\n              }\n            })}\n          </Nav>\n          <TabContent activeTab={this.state.activeTab}>\n            {tabNames.map(item => {\n              return (\n                <TabPane tabId={item} key={item}>\n                  <Row>\n                    {this.state.apis\n                      .filter(data => data.Released.slice(3, 11) === item)\n                      .map(data => {\n\n                        if (this.state.isSignedIn){\n                          var currentButtonList = this.state.removeButton\n                          var currentState = this\n                          db.collection(\"user\").doc(auth.currentUser.email)\n                                .get()\n                                .then(function (doc) {\n                                  var newWatchlist = doc.data().watchlist;\n                                  var addIndex = newWatchlist.indexOf(data.imdbID)\n                                  if (addIndex > -1) {\n                                    currentButtonList.push(data.imdbID)\n                                    currentState.setState({\n                                      removeButton: currentButtonList\n                                    })\n                                  }\n                        \n                                })\n                                .catch(function(error) {\n                                  console.log(\"Error getting document:\", error);\n                                });\n                          }  \n                        \n                        return (\n                          <Col xl=\"6\" key={data.Title}>\n                            <Media className=\"media-body\">\n                              <Media left className=\"media-pic\">\n                                <a\n                                  href={\n                                    \"https://www.imdb.com/title/\" + data.imdbID\n                                  }\n                                  title=\"none clickbait\"\n                                  rel=\"noopener noreferrer\"\n                                  target=\"_blank\"\n                                  className=\"media-pic\"\n                                >\n                                  <img alt={data.Title} src={data.Poster} />\n                                </a>\n                              </Media>\n                              <Media body className=\"cards-body\">\n                                <CardTitle>\n                                  <NavLink\n                                    to={{\n                                      pathname: \"./Movie\",\n                                      id: data.imdbID\n                                    }}\n                                    className=\"card-title\"\n                                    title=\"more info\"\n                                  >\n                                    {data.Title}\n                                  </NavLink>\n                                  {this.state.isSignedIn?\n                                  <button \n                                    className=\"watchlist-btn\" \n                                    onClick={() => {\n                                      this.setWatchList(data.imdbID)\n                                    }}\n                                  >\n                                    {this.state.removeButton.indexOf(data.imdbID)===-1?<FiPlusSquare />:<FiMinusSquare />}\n                                  </button>\n                                  :\"\"}\n                                </CardTitle>\n                                <CardSubtitle className=\"card-subtitles\">\n                                  {data.Rated} | {data.Runtime} | {data.Genre} |{\" \"}\n                                  {data.Released}\n                                </CardSubtitle>\n                                <CardText className=\"comingsoon-Card\">Director: {data.Director}</CardText>\n                                <CardText className=\"comingsoon-Card\">Actors: {data.Actors}</CardText>\n                                <CardText className=\"comingsoon-Plot\">Plot: {data.Plot}</CardText>\n                              </Media>\n                            </Media>\n                          </Col>\n                        );\n                      })}\n                  </Row>\n                </TabPane>\n              );\n            })}\n          </TabContent>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ComingSoon;\n"]},"metadata":{},"sourceType":"module"}