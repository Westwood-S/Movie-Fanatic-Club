{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/movie-fanatic-club/src/components/inTheater.js\";\nimport React, { useState, Component } from 'react';\nimport { Row, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from 'reactstrap';\nimport { FaImdb } from \"react-icons/fa\";\nimport rp from \"request-promise\";\nimport cheerio from \"cheerio\";\nimport './index.css';\n\nclass InTheater extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: []\n    };\n  }\n\n  componentDidMount() {\n    rp(\"https://www.imdb.com/search/title/?title_type=feature&user_rating=7.0,&groups=now-playing-us\").then(html => {\n      let names = [];\n      let $ = cheerio.load(html); // find what element ids, classes, or tags you want from opening console in the browser\n      // cheerio library lets you select elements similar to querySelector\n\n      $(\".lister-item-header a\").each(function (i, element) {\n        let name = $(this).prepend().text();\n        names.push(name);\n      });\n      this.setState({\n        names\n      });\n    }).catch(function (err) {\n      console.log(\"crawl failed\");\n    });\n  }\n\n  render() {\n    const items = this.state;\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [animating, setAnimating] = useState(false);\n\n    const next = () => {\n      if (animating) return;\n      const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n      setActiveIndex(nextIndex);\n    };\n\n    const previous = () => {\n      if (animating) return;\n      const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n      setActiveIndex(nextIndex);\n    };\n\n    const goToIndex = newIndex => {\n      if (animating) return;\n      setActiveIndex(newIndex);\n    };\n\n    const slides = items.map(item => {\n      return React.createElement(CarouselItem, {\n        onExiting: () => setAnimating(true),\n        onExited: () => setAnimating(false),\n        key: item,\n        className: \"carousel-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"In Theater\")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, item))));\n    });\n    return React.createElement(Carousel, {\n      activeIndex: activeIndex,\n      next: next,\n      previous: previous,\n      className: \"carousel-inners\",\n      interval: \"1000000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(CarouselIndicators, {\n      items: items,\n      activeIndex: activeIndex,\n      onClickHandler: goToIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), slides, React.createElement(CarouselControl, {\n      direction: \"prev\",\n      directionText: \"Previous\",\n      onClickHandler: previous,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(CarouselControl, {\n      direction: \"next\",\n      directionText: \"Next\",\n      onClickHandler: next,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default InTheater;","map":{"version":3,"sources":["/home/lishi/Desktop/movie-fanatic-club/src/components/inTheater.js"],"names":["React","useState","Component","Row","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Carousel","CarouselItem","CarouselControl","CarouselIndicators","CarouselCaption","FaImdb","rp","cheerio","InTheater","constructor","props","state","info","componentDidMount","then","html","names","$","load","each","i","element","name","prepend","text","push","setState","catch","err","console","log","render","items","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","goToIndex","newIndex","slides","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SACEC,GADF,EAEEC,IAFF,EAEQC,OAFR,EAEiBC,QAFjB,EAE2BC,QAF3B,EAGEC,SAHF,EAGaC,YAHb,EAG2BC,MAH3B,EAIEC,QAJF,EAKEC,YALF,EAMEC,eANF,EAOEC,kBAPF,EAQEC,eARF,QASO,YATP;AAUA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,SAAN,SAAwBjB,SAAxB,CAAkC;AAE9BkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAElBP,IAAAA,EAAE,CAAC,8FAAD,CAAF,CACGQ,IADH,CACQC,IAAI,IAAI;AACZ,UAAIC,KAAK,GAAG,EAAZ;AACA,UAAIC,CAAC,GAAGV,OAAO,CAACW,IAAR,CAAaH,IAAb,CAAR,CAFY,CAIZ;AACA;;AACAE,MAAAA,CAAC,CAAC,uBAAD,CAAD,CAA2BE,IAA3B,CAAgC,UAASC,CAAT,EAAYC,OAAZ,EAAqB;AACnD,YAAIC,IAAI,GAAGL,CAAC,CAAC,IAAD,CAAD,CACRM,OADQ,GAERC,IAFQ,EAAX;AAGAR,QAAAA,KAAK,CAACS,IAAN,CAAWH,IAAX;AACD,OALD;AAOA,WAAKI,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACD,KAfH,EAgBGW,KAhBH,CAgBS,UAASC,GAAT,EAAc;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAlBH;AAmBD;;AAIDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,KAAK,GAAG,KAAKrB,KAAnB;AAEA,UAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgC5C,QAAQ,CAAC,CAAD,CAA9C;AACA,UAAM,CAAC6C,SAAD,EAAYC,YAAZ,IAA4B9C,QAAQ,CAAC,KAAD,CAA1C;;AAEA,UAAM+C,IAAI,GAAG,MAAM;AACjB,UAAIF,SAAJ,EAAe;AACf,YAAMG,SAAS,GAAGL,WAAW,KAAKD,KAAK,CAACO,MAAN,GAAe,CAA/B,GAAmC,CAAnC,GAAuCN,WAAW,GAAG,CAAvE;AACAC,MAAAA,cAAc,CAACI,SAAD,CAAd;AACD,KAJD;;AAMA,UAAME,QAAQ,GAAG,MAAM;AACrB,UAAIL,SAAJ,EAAe;AACf,YAAMG,SAAS,GAAGL,WAAW,KAAK,CAAhB,GAAoBD,KAAK,CAACO,MAAN,GAAe,CAAnC,GAAuCN,WAAW,GAAG,CAAvE;AACAC,MAAAA,cAAc,CAACI,SAAD,CAAd;AACD,KAJD;;AAMA,UAAMG,SAAS,GAAIC,QAAD,IAAc;AAC9B,UAAIP,SAAJ,EAAe;AACfD,MAAAA,cAAc,CAACQ,QAAD,CAAd;AACD,KAHD;;AAKA,UAAMC,MAAM,GAAGX,KAAK,CAACY,GAAN,CAAWC,IAAD,IAAU;AACjC,aACE,oBAAC,YAAD;AACE,QAAA,SAAS,EAAE,MAAMT,YAAY,CAAC,IAAD,CAD/B;AAEE,QAAA,QAAQ,EAAE,MAAMA,YAAY,CAAC,KAAD,CAF9B;AAGE,QAAA,GAAG,EAAES,IAHP;AAIE,QAAA,SAAS,EAAC,eAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA9B,CANF,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmCA,IAAnC,CADF,CADF,CARF,CADF;AAqBD,KAtBc,CAAf;AAwBF,WACE,oBAAC,QAAD;AACI,MAAA,WAAW,EAAEZ,WADjB;AAEI,MAAA,IAAI,EAAEI,IAFV;AAGI,MAAA,QAAQ,EAAEG,QAHd;AAII,MAAA,SAAS,EAAC,iBAJd;AAKI,MAAA,QAAQ,EAAC,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,kBAAD;AAAoB,MAAA,KAAK,EAAER,KAA3B;AAAkC,MAAA,WAAW,EAAEC,WAA/C;AAA4D,MAAA,cAAc,EAAEQ,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQKE,MARL,EASI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAkC,MAAA,aAAa,EAAC,UAAhD;AAA2D,MAAA,cAAc,EAAEH,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAkC,MAAA,aAAa,EAAC,MAAhD;AAAuD,MAAA,cAAc,EAAEH,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADF;AAcD;;AAjG6B;;AAsGhC,eAAe7B,SAAf","sourcesContent":["import React, {useState, Component} from 'react';\nimport {\n  Row,\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button,\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\nimport { FaImdb } from \"react-icons/fa\";\nimport rp from \"request-promise\"\nimport cheerio from \"cheerio\";\nimport './index.css';\n\nclass InTheater extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            info: [],\n\n        };\n    }\n  \n    componentDidMount() {\n      \n      rp(\"https://www.imdb.com/search/title/?title_type=feature&user_rating=7.0,&groups=now-playing-us\")\n        .then(html => {\n          let names = [];\n          let $ = cheerio.load(html);\n  \n          // find what element ids, classes, or tags you want from opening console in the browser\n          // cheerio library lets you select elements similar to querySelector\n          $(\".lister-item-header a\").each(function(i, element) {\n            let name = $(this)\n              .prepend()\n              .text();\n            names.push(name);\n          });\n  \n          this.setState({ names });\n        })\n        .catch(function(err) {\n          console.log(\"crawl failed\");\n        });\n    }\n\n    \n  \n    render() {\n\n        const items = this.state;\n\n        const [activeIndex, setActiveIndex] = useState(0);\n        const [animating, setAnimating] = useState(false);\n      \n        const next = () => {\n          if (animating) return;\n          const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n          setActiveIndex(nextIndex);\n        }\n      \n        const previous = () => {\n          if (animating) return;\n          const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n          setActiveIndex(nextIndex);\n        }\n      \n        const goToIndex = (newIndex) => {\n          if (animating) return;\n          setActiveIndex(newIndex);\n        }\n      \n        const slides = items.map((item) => {\n          return (\n            <CarouselItem\n              onExiting={() => setAnimating(true)}\n              onExited={() => setAnimating(false)}\n              key={item}\n              className=\"carousel-item\"\n            >\n              <h2 className=\"section-title\"><a href=\"/\">In Theater</a></h2>\n              {/*<a href={item.trailer} title=\"traaailer\" className=\"card-img\" rel=\"noopener noreferrer\" target=\"_blank\"><img src={item.src} alt={item.title} /></a>*/}\n              <Card>\n                <CardBody>\n                  <CardTitle className=\"card-title\">{item}</CardTitle>\n                  {/*<CardSubtitle><FaImdb />{item.imdbscore}</CardSubtitle>\n                  <CardSubtitle>Director: {item.director}</CardSubtitle>\n                  <CardText>{item.intro}</CardText>\n                  <Button>Button</Button>*/}\n                </CardBody>\n              </Card>\n            </CarouselItem>\n      \n          );\n        });\n\n      return (\n        <Carousel\n            activeIndex={activeIndex}\n            next={next}\n            previous={previous}\n            className=\"carousel-inners\"\n            interval=\"1000000\"\n        >\n            <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n            {slides}\n            <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n            <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n        </Carousel>\n      );\n    }\n  }\n\n\n  \n  export default InTheater;"]},"metadata":{},"sourceType":"module"}