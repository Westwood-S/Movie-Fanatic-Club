{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Watchlist.js\";\n// body component for a user's watchlist\nimport React from \"react\";\nimport \"../index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\nimport firebase from \"firebase\";\nimport { FiFileMinus, FiFilePlus } from \"react-icons/fi\";\nimport { CardText, CardTitle, CardSubtitle, Row, Col, Media } from \"reactstrap\";\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      apis: [],\n      dates: [],\n      activeTab: \"\",\n      isAdd: true\n    };\n    this.setAPIState = this.setAPIState.bind(this);\n    this.setWatchList = this.setWatchList.bind(this);\n  }\n\n  removeFromWatchList() {\n    var watchlistRef = db.collection(\"user\").doc(auth.currentUser.email);\n    watchlistRef.update({\n      watchlist: firebase.firestore.FieldValue.arrayRemove(this.state.movie.id)\n    });\n  }\n\n  setAPIState(APIs) {\n    this.setState({\n      apis: [...this.state.apis, APIs]\n    });\n  }\n\n  setWatchList(id) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email);\n\n    if (this.state.isAdd) {\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        var index = newWatchlist.indexOf(id);\n\n        if (index > -1) {\n          newWatchlist.splice(index, 1);\n        }\n\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        isAdd: !this.state.isAdd\n      });\n    } else {\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        newWatchlist.push(id);\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        isAdd: !this.state.isAdd\n      });\n    }\n  }\n\n  async componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        let currentComponent = this;\n        var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n        docRef.get().then(function (doc) {\n          if (doc.exists) {\n            for (let i = 0; i < doc.data().watchlist.length; i++) {\n              let name = doc.data().watchlist[i];\n              const URL = \"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\n              fetch(URL).then(result => result.json()).then(result => {\n                currentComponent.setAPIState(result);\n              });\n            }\n          } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        });\n      } else {\n        console.log(\"cannot find user in watchlist\");\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"watchlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Watchlist\"), React.createElement(\"div\", {\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.apis.map(data => {\n      return React.createElement(Col, {\n        xl: \"6\",\n        key: data.Title,\n        className: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Media, {\n        className: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Media, {\n        left: true,\n        className: \"media-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://www.imdb.com/title/\" + data.imdbID,\n        title: \"imdb express\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        className: \"media-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: data.Title,\n        src: data.Poster,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))), React.createElement(Media, {\n        body: true,\n        className: \"cards-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: {\n          pathname: \"./Movie\",\n          id: data.imdbID\n        },\n        className: \"card-title\",\n        title: \"this is it\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, data.Title, React.createElement(\"button\", {\n        className: \"watchlist-btn\",\n        onClick: () => {\n          this.setWatchList(data.imdbID);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.isAdd ? React.createElement(FiFileMinus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }) : React.createElement(FiFilePlus, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })))), React.createElement(CardSubtitle, {\n        className: \"card-subtitles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, data.Rated, \" | \", data.Runtime, \" | \", data.Genre, \" |\", \" \", data.Released), React.createElement(CardText, {\n        className: \"watchlist-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Director: \", data.Director), React.createElement(CardText, {\n        className: \"watchlist-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Actors: \", data.Actors), React.createElement(CardText, {\n        className: \"watchlist-plot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Plot: \", data.Plot))));\n    }))));\n  }\n\n}\n\nexport default Watchlist;","map":{"version":3,"sources":["/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Watchlist.js"],"names":["React","NavLink","auth","db","firebase","FiFileMinus","FiFilePlus","CardText","CardTitle","CardSubtitle","Row","Col","Media","Watchlist","Component","constructor","props","state","value","apis","dates","activeTab","isAdd","setAPIState","bind","setWatchList","removeFromWatchList","watchlistRef","collection","doc","currentUser","email","update","watchlist","firestore","FieldValue","arrayRemove","movie","id","APIs","setState","userRef","get","then","newWatchlist","data","index","indexOf","splice","catch","error","console","log","push","componentDidMount","onAuthStateChanged","user","currentComponent","docRef","exists","i","length","name","URL","fetch","result","json","render","map","Title","imdbID","Poster","pathname","Rated","Runtime","Genre","Released","Director","Actors","Plot"],"mappings":"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","sourcesContent":["// body component for a user's watchlist\n\nimport React from \"react\";\nimport \"../index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\nimport firebase from \"firebase\";\nimport { FiFileMinus, FiFilePlus } from \"react-icons/fi\";\nimport {\n  CardText,\n  CardTitle,\n  CardSubtitle,\n  Row,\n  Col,\n  Media\n} from \"reactstrap\";\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      apis: [],\n      dates: [],\n      activeTab: \"\",\n      isAdd: true\n    };\n    this.setAPIState = this.setAPIState.bind(this);\n    this.setWatchList = this.setWatchList.bind(this);\n  }\n\n  removeFromWatchList(){\n    var watchlistRef = db.collection(\"user\").doc(auth.currentUser.email);\n    watchlistRef.update({\n      watchlist: firebase.firestore.FieldValue.arrayRemove(this.state.movie.id)\n    });\n  }\n\n  setAPIState(APIs){\n    this.setState({ apis: [...this.state.apis, APIs] });\n  }\n\n  setWatchList(id) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email)\n    if (this.state.isAdd) {\n      userRef\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          var index = newWatchlist.indexOf(id)\n          if (index > -1) {\n            newWatchlist.splice(index, 1)\n          }\n          userRef.update({\n            watchlist: newWatchlist\n          })\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n\n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n    else {\n      userRef\n        .get()\n        .then(function (doc) {\n          var newWatchlist = doc.data().watchlist;\n          newWatchlist.push(id)\n          userRef.update({\n            watchlist: newWatchlist\n          })\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n\n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n  }\n\n  async componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        let currentComponent = this;\n        var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n          docRef\n            .get()\n            .then(function(doc) {\n              if (doc.exists) {\n                for (let i = 0; i < doc.data().watchlist.length; i++) {\n                  let name = doc.data().watchlist[i];\n                  const URL = \"https://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\n                  fetch(URL)\n                    .then(result => result.json())\n                    .then(result => {\n                      currentComponent.setAPIState(result);\n                    });\n                }\n              } else {\n                // doc.data() will be undefined in this case\n                console.log(\"No such document!\");\n              }\n            })\n            .catch(function(error) {\n              console.log(\"Error getting document:\", error);\n            });\n      }\n      else {\n        console.log (\"cannot find user in watchlist\")\n      }\n    })\n        \n    \n  }\n\n  render() {\n    return (\n      <div className=\"watchlist\">\n        <h2 className=\"section-title\">Watchlist</h2>\n\n        <div className=\"tabs\">\n          <Row>\n            {this.state.apis.map(data => {\n              return (\n                <Col xl=\"6\" key={data.Title} className>\n                  <Media className=\"media-body\">\n                    <Media left className=\"media-pic\">\n                      <a\n                        href={\"https://www.imdb.com/title/\" + data.imdbID}\n                        title=\"imdb express\"\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                        className=\"media-pic\"\n                      >\n                        <img alt={data.Title} src={data.Poster} />\n                      </a>\n                    </Media>\n                    <Media body className=\"cards-body\">\n                      <CardTitle>\n                        <NavLink\n                          to={{\n                            pathname: \"./Movie\",\n                            id: data.imdbID\n                          }}\n                          className=\"card-title\"\n                          title=\"this is it\"\n                        >\n                          {data.Title} \n                          <button \n                            className=\"watchlist-btn\" \n                            onClick={() => {\n                              this.setWatchList(data.imdbID)\n                            }}\n                          >\n                            {this.state.isAdd?<FiFileMinus />:<FiFilePlus />}\n                          </button>\n                        </NavLink>\n                      </CardTitle>\n                      <CardSubtitle className=\"card-subtitles\">\n                        {data.Rated} | {data.Runtime} | {data.Genre} |{\" \"}\n                        {data.Released}\n                      </CardSubtitle>\n                      <CardText className=\"watchlist-info\">Director: {data.Director}</CardText>\n                      <CardText className=\"watchlist-info\">Actors: {data.Actors}</CardText>\n                      <CardText className=\"watchlist-plot\">Plot: {data.Plot}</CardText>\n                    </Media>\n                  </Media>\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Watchlist;\n"]},"metadata":{},"sourceType":"module"}