{"ast":null,"code":"var _jsxFileName = \"/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Movie.js\";\n// body component for loading stuff about an individual movie\n// when the user clicks on it\nimport React, { useEffect } from \"react\";\nimport \"../index.css\";\nimport { Media, Container, Row, Button } from 'reactstrap';\nimport { NavLink } from \"react-router-dom\";\nimport { TiPlusOutline, TiMinusOutline } from \"react-icons/ti\";\nimport { auth, db } from './Firebase';\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      movies: {},\n      loading: true,\n      isAdd: false,\n      user: auth.currentUser.email\n    };\n    this.setWatchList = this.setWatchList.bind(this); //this.checkExists = this.checkExists.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(\"https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/\" + this.props.location.id, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"c3bfcbae69msh2fefac5f7da67adp1d2687jsnade70055f49b\"\n      }\n    }).then(response => {\n      response.json().then(data => {\n        this.setState({\n          movie: data\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    fetch('https://www.omdbapi.com/?apikey=1e54e73e&i=' + this.props.location.id).then(response => {\n      response.json().then(data => {\n        this.setState({\n          movies: data\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    let userRef = db.collection(\"user\").doc(this.state.user);\n    console.log(userRef);\n  }\n  /* checkExists(id) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email)\n    if (this.state.isAdd === \"false\"){\n      userRef\n        .get()\n          .then(function(doc) {\n            var newWatchlist = doc.data().watchlist;\n            var index = newWatchlist.indexOf(id)\n            if(index > -1) {\n              newWatchlist.splice(index,1)\n            }\n           })\n          .catch(function(error){\n            console.log(error)\n          })\n        \n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n  } */\n\n\n  setWatchList(id) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email);\n\n    if (this.state.isAdd) {\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        var index = newWatchlist.indexOf(id);\n\n        if (index > -1) {\n          newWatchlist.splice(index, 1);\n        }\n\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        isAdd: !this.state.isAdd\n      });\n    } else {\n      userRef.get().then(function (doc) {\n        var newWatchlist = doc.data().watchlist;\n        newWatchlist.push(id);\n        userRef.update({\n          watchlist: newWatchlist\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.setState({\n        isAdd: !this.state.isAdd\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.state.movie ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      title: \"if u stan imdb...\",\n      className: \"movie-title\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      href: \"https://www.imdb.com/title/\" + this.state.movie.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.movie.title, \" (\", this.state.movie.year, \")\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-poster\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.movie.poster ? React.createElement(\"a\", {\n      title: \"trailer is here!\",\n      className: \"movie-title\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      href: this.state.movie.trailer ? this.state.movie.trailer.link : \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"movie-actual-poster\",\n      alt: this.state.movie.title,\n      src: this.state.movie.poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })) : \"\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"directed by: \", this.state.movies.Director)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.state.movies.Rated, \" | \", this.state.movies.Runtime, \" | \", this.state.movies.Released)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.movies.Country, \" | \", this.state.movies.Language)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"IMDb rating: \", this.state.movies.imdbRating, \" | Metascore: \", this.state.movies.Metascore)), this.state.movies.Production ? React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"this.state.movies.Production\")) : \"\", React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"AWARDS: \", this.state.movies.Awards)), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"PLOT: \", this.state.movies.Plot)), this.state.movie.cast ? this.state.movie.cast.map(item => {\n      return React.createElement(Row, {\n        key: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"movie-actor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"movie-actor-link\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        href: 'https://www.imdb.com/name/' + item.actor_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, item.actor), \" as \", item.character));\n    }) : \"\", React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movie-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.setWatchList(this.state.movie.id);\n      },\n      className: \"movie-rl-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" \", \" \", this.state.isAdd ? React.createElement(TiMinusOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }) : React.createElement(TiPlusOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), \"watchlist\")))) : React.createElement(Media, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"wait a sec bru\"));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/home/lishi/Desktop/fullstack/movie-fanatic-club/src/components/Movie.js"],"names":["React","useEffect","Media","Container","Row","Button","NavLink","TiPlusOutline","TiMinusOutline","auth","db","Movie","Component","constructor","props","state","movie","movies","loading","isAdd","user","currentUser","email","setWatchList","bind","componentDidMount","fetch","location","id","then","response","json","data","setState","catch","err","console","log","userRef","collection","doc","get","newWatchlist","watchlist","index","indexOf","splice","update","error","push","render","title","year","poster","trailer","link","Director","Rated","Runtime","Released","Country","Language","imdbRating","Metascore","Production","Awards","Plot","cast","map","item","actor_id","actor","character"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,GAA3B,EAAgCC,MAAhC,QAA6C,YAA7C;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,gBAA9C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,YAAzB;;AAEA,MAAMC,KAAN,SAAoBX,KAAK,CAACY,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,OAAO,EAAE,IAHE;AAIXC,MAAAA,KAAK,EAAE,KAJI;AAKXC,MAAAA,IAAI,EAAEX,IAAI,CAACY,WAAL,CAAiBC;AALZ,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CAViB,CAWjB;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,yEAAuE,KAAKZ,KAAL,CAAWa,QAAX,CAAoBC,EAA5F,EAAgG;AAC7F,gBAAU,KADmF;AAE7F,iBAAW;AACP,2BAAmB,wDADZ;AAEP,0BAAkB;AAFX;AAFkF,KAAhG,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,IAAI,IAAG;AACzB,aAAKC,QAAL,CAAc;AACZjB,UAAAA,KAAK,EAAEgB;AADK,SAAd;AAGH,OAJD;AAKD,KAbD,EAcCE,KAdD,CAcOC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAhBD;AAkBAT,IAAAA,KAAK,CAAC,gDAA8C,KAAKZ,KAAL,CAAWa,QAAX,CAAoBC,EAAnE,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,IAAI,IAAG;AACzB,aAAKC,QAAL,CAAc;AACZhB,UAAAA,MAAM,EAAEe;AADI,SAAd;AAGH,OAJD;AAKD,KAPD,EAQCE,KARD,CAQOC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAVD;AAYA,QAAIG,OAAO,GAAG5B,EAAE,CAAC6B,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0B,KAAKzB,KAAL,CAAWK,IAArC,CAAd;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;AAuBAf,EAAAA,YAAY,CAACK,EAAD,EAAI;AACd,QAAIU,OAAO,GAAG5B,EAAE,CAAC6B,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0B/B,IAAI,CAACY,WAAL,CAAiBC,KAA3C,CAAd;;AACA,QAAI,KAAKP,KAAL,CAAWI,KAAf,EAAqB;AACnBmB,MAAAA,OAAO,CACJG,GADH,GAEKZ,IAFL,CAEU,UAASW,GAAT,EAAc;AAClB,YAAIE,YAAY,GAAGF,GAAG,CAACR,IAAJ,GAAWW,SAA9B;AACA,YAAIC,KAAK,GAAGF,YAAY,CAACG,OAAb,CAAqBjB,EAArB,CAAZ;;AACA,YAAGgB,KAAK,GAAG,CAAC,CAAZ,EAAe;AACbF,UAAAA,YAAY,CAACI,MAAb,CAAoBF,KAApB,EAA0B,CAA1B;AACD;;AACDN,QAAAA,OAAO,CAACS,MAAR,CAAe;AACbJ,UAAAA,SAAS,EAAED;AADE,SAAf;AAGD,OAXL,EAYKR,KAZL,CAYW,UAASc,KAAT,EAAe;AACpBZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,OAdL;AAgBA,WAAKf,QAAL,CAAc;AACZd,QAAAA,KAAK,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADP,OAAd;AAGD,KApBD,MAqBK;AACHmB,MAAAA,OAAO,CACJG,GADH,GAEGZ,IAFH,CAEQ,UAASW,GAAT,EAAc;AAClB,YAAIE,YAAY,GAAGF,GAAG,CAACR,IAAJ,GAAWW,SAA9B;AACAD,QAAAA,YAAY,CAACO,IAAb,CAAkBrB,EAAlB;AACAU,QAAAA,OAAO,CAACS,MAAR,CAAe;AACbJ,UAAAA,SAAS,EAAED;AADE,SAAf;AAGD,OARH,EASGR,KATH,CASS,UAASc,KAAT,EAAe;AACpBZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,OAXH;AAaA,WAAKf,QAAL,CAAc;AACZd,QAAAA,KAAK,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADP,OAAd;AAGD;AACF;;AAED+B,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnC,KAAL,CAAWC,KAAX,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAC,mBAAT;AAA6B,MAAA,SAAS,EAAC,aAAvC;AAAqD,MAAA,GAAG,EAAC,qBAAzD;AAA+E,MAAA,MAAM,EAAC,QAAtF;AAA+F,MAAA,IAAI,EAAE,gCAA8B,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,EAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyJ,KAAKb,KAAL,CAAWC,KAAX,CAAiBmC,KAA1K,QAAmL,KAAKpC,KAAL,CAAWC,KAAX,CAAiBoC,IAApM,MADF,CADF,EAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKrC,KAAL,CAAWC,KAAX,CAAiBqC,MAAjB,GACD;AAAG,MAAA,KAAK,EAAC,kBAAT;AAA4B,MAAA,SAAS,EAAC,aAAtC;AAAoD,MAAA,GAAG,EAAC,qBAAxD;AAA8E,MAAA,MAAM,EAAC,QAArF;AAA8F,MAAA,IAAI,EAAE,KAAKtC,KAAL,CAAWC,KAAX,CAAiBsC,OAAjB,GAAyB,KAAKvC,KAAL,CAAWC,KAAX,CAAiBsC,OAAjB,CAAyBC,IAAlD,GAAuD,GAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,GAAG,EAAE,KAAKxC,KAAL,CAAWC,KAAX,CAAiBmC,KAA3D;AAAkE,MAAA,GAAG,EAAE,KAAKpC,KAAL,CAAWC,KAAX,CAAiBqC,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADC,GAIA,EALH,CADF,CAJF,EAcE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA8C,KAAKtC,KAAL,CAAWE,MAAX,CAAkBuC,QAAhE,CAAL,CAdF,EAeE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKzC,KAAL,CAAWE,MAAX,CAAkBwC,KAAhD,SAA0D,KAAK1C,KAAL,CAAWE,MAAX,CAAkByC,OAA5E,SAAwF,KAAK3C,KAAL,CAAWE,MAAX,CAAkB0C,QAA1G,CAAL,CAfF,EAgBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAK5C,KAAL,CAAWE,MAAX,CAAkB2C,OAAhD,SAA4D,KAAK7C,KAAL,CAAWE,MAAX,CAAkB4C,QAA9E,CAAL,CAhBF,EAiBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA2C,KAAK9C,KAAL,CAAWE,MAAX,CAAkB6C,UAA7D,oBAAuF,KAAK/C,KAAL,CAAWE,MAAX,CAAkB8C,SAAzG,CAAL,CAjBF,EAkBG,KAAKhD,KAAL,CAAWE,MAAX,CAAkB+C,UAAlB,GACD,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAL,CADC,GAC8E,EAnBjF,EAoBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsC,KAAKjD,KAAL,CAAWE,MAAX,CAAkBgD,MAAxD,CAAL,CApBF,EAqBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAoC,KAAKlD,KAAL,CAAWE,MAAX,CAAkBiD,IAAtD,CAAL,CArBF,EAsBG,KAAKnD,KAAL,CAAWC,KAAX,CAAiBmD,IAAjB,GACD,KAAKpD,KAAL,CAAWC,KAAX,CAAiBmD,IAAjB,CAAsBC,GAAtB,CAA0BC,IAAI,IAAE;AAC9B,aACE,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAY;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACV;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAgC,QAAA,GAAG,EAAC,qBAApC;AAA0D,QAAA,MAAM,EAAC,QAAjE;AAA0E,QAAA,IAAI,EAAE,+BAA6BA,IAAI,CAACC,QAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6HD,IAAI,CAACE,KAAlI,CADU,UACuIF,IAAI,CAACG,SAD5I,CAAZ,CADF;AAKD,KAND,CADC,GAQA,EA9BH,EA+BE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAI;AACnB,aAAKjD,YAAL,CAAkB,KAAKR,KAAL,CAAWC,KAAX,CAAiBY,EAAnC;AACD,OAFD;AAEG,MAAA,SAAS,EAAC,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAE8E,KAAKb,KAAL,CAAWI,KAAX,GAAiB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,GAAoC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlH,cADF,CADF,CA/BF,CADC,GA2CC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA5CJ,CADF;AAgDD;;AArKiC;;AAwKpC,eAAeR,KAAf","sourcesContent":["// body component for loading stuff about an individual movie\n// when the user clicks on it\n\nimport React, { useEffect } from \"react\";\nimport \"../index.css\";\nimport { Media, Container, Row, Button} from 'reactstrap';\nimport { NavLink } from \"react-router-dom\";\nimport { TiPlusOutline, TiMinusOutline } from \"react-icons/ti\";\nimport { auth, db } from './Firebase';\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {},\n      movies: {},\n      loading: true,\n      isAdd: false,\n      user: auth.currentUser.email\n    };\n\n    this.setWatchList = this.setWatchList.bind(this)\n    //this.checkExists = this.checkExists.bind(this)\n  }\n\n  componentDidMount(){\n    fetch(\"https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/\"+this.props.location.id, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"c3bfcbae69msh2fefac5f7da67adp1d2687jsnade70055f49b\"\n            }\n    })\n    .then(response => {\n      response.json().then (data =>{\n          this.setState({\n            movie: data\n          }) \n      })\n    })\n    .catch(err => {\n        console.log(err);\n    }); \n\n    fetch('https://www.omdbapi.com/?apikey=1e54e73e&i='+this.props.location.id)\n    .then(response => {\n      response.json().then (data =>{\n          this.setState({\n            movies: data\n          })\n      })\n    })\n    .catch(err => {\n        console.log(err);\n    }); \n\n    let userRef = db.collection(\"user\").doc(this.state.user)\n    console.log(userRef)\n  }\n\n  /* checkExists(id) {\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email)\n    if (this.state.isAdd === \"false\"){\n      userRef\n        .get()\n          .then(function(doc) {\n            var newWatchlist = doc.data().watchlist;\n            var index = newWatchlist.indexOf(id)\n            if(index > -1) {\n              newWatchlist.splice(index,1)\n            }\n\n          })\n          .catch(function(error){\n            console.log(error)\n          })\n        \n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n  } */\n\n  setWatchList(id){\n    let userRef = db.collection(\"user\").doc(auth.currentUser.email)\n    if (this.state.isAdd){\n      userRef\n        .get()\n          .then(function(doc) {\n            var newWatchlist = doc.data().watchlist;\n            var index = newWatchlist.indexOf(id)\n            if(index > -1) {\n              newWatchlist.splice(index,1)\n            }\n            userRef.update({\n              watchlist: newWatchlist\n            })\n          })\n          .catch(function(error){\n            console.log(error)\n          })\n        \n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n    else {\n      userRef\n        .get()\n        .then(function(doc) {\n          var newWatchlist = doc.data().watchlist;\n          newWatchlist.push(id)\n          userRef.update({\n            watchlist: newWatchlist\n          })\n        })\n        .catch(function(error){\n          console.log(error)\n        })\n\n      this.setState({\n        isAdd: !this.state.isAdd\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.movie? \n        <div>\n          <Row>\n            <a title=\"if u stan imdb...\" className=\"movie-title\" rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://www.imdb.com/title/\"+this.state.movie.id}>{this.state.movie.title} ({this.state.movie.year})</a>\n          </Row>\n          <Row>\n            <div className=\"movie-poster\">\n              {this.state.movie.poster?\n              <a title=\"trailer is here!\" className=\"movie-title\" rel=\"noopener noreferrer\" target=\"_blank\" href={this.state.movie.trailer?this.state.movie.trailer.link:\"/\"}>\n                <img className=\"movie-actual-poster\" alt={this.state.movie.title} src={this.state.movie.poster}/>\n              </a>\n              :\"\"}\n              \n            </div>\n          </Row>\n          <Row><div className=\"movie-director\">directed by: {this.state.movies.Director}</div></Row>\n          <Row><div  className=\"movie-info\">{this.state.movies.Rated} | {this.state.movies.Runtime} | {this.state.movies.Released}</div></Row>\n          <Row><div  className=\"movie-info\">{this.state.movies.Country} | {this.state.movies.Language}</div></Row>\n          <Row><div  className=\"movie-info\">IMDb rating: {this.state.movies.imdbRating} | Metascore: {this.state.movies.Metascore}</div></Row>\n          {this.state.movies.Production?\n          <Row><div  className=\"movie-director\">this.state.movies.Production</div></Row>:\"\"}\n          <Row><div  className=\"movie-info\">AWARDS: {this.state.movies.Awards}</div></Row>\n          <Row><div  className=\"movie-info\">PLOT: {this.state.movies.Plot}</div></Row>\n          {this.state.movie.cast?\n          this.state.movie.cast.map(item=>{\n            return(\n              <Row key=\"\"><div  className=\"movie-actor\">\n                <a className=\"movie-actor-link\" rel=\"noopener noreferrer\" target=\"_blank\" href={'https://www.imdb.com/name/'+item.actor_id}>{item.actor}</a> as {item.character}\n              </div></Row>\n            )\n          })\n          :\"\"}\n          <Row>\n            <div className=\"movie-btn\"> \n              <Button onClick={()=>{\n                this.setWatchList(this.state.movie.id)\n              }} className=\"movie-rl-btn\"> {/* {this.checkExists(this.state.movie.id)} */} {this.state.isAdd?<TiMinusOutline />:<TiPlusOutline />} \n                watchlist\n              </Button>\n         \n            </div>\n          </Row>\n       </div>\n        : <Media>wait a sec bru</Media>}\n      </Container>\n    );\n  }\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}