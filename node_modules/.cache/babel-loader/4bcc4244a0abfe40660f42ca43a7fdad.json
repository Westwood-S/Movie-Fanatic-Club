{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molli\\\\Desktop\\\\full-stack\\\\movie-fanatic-club\\\\src\\\\components\\\\Navbar.js\";\nimport React, { useState } from \"react\";\nimport { FaRegNewspaper, FaUserSecret } from \"react-icons/fa\";\nimport { MdMovieFilter, MdLocationSearching } from \"react-icons/md\";\nimport { Container, Row, Col, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText } from \"reactstrap\";\nimport \"../index.css\";\nimport InTheater from \"./inTheater\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\nimport { Redirect, NavLink, Link } from \"react-router-dom\"; //function NavBar()\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props); // value: name of city user entered\n\n    /* toEvents: default value is false. when user hits submit button on landing page, the onClick attribute\r\n                 calls the handleSubmit function, which switches 'toEvents' to true, meaning 'the user wants to \r\n                 be routed to the Events page.' Then, when Landing returns, if toEvents is true, it redirects to\r\n                 the events page instead of rendering the Landing page\r\n    */\n\n    this.state = {\n      value: \"\",\n      toLogin: false\n    }; //this.handleChange = this.handleChange.bind(this);\n    //this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleLoginRedirect(event) {\n    // set state \"toEvents\" to true\n    this.setState(() => ({\n      toLogin: true\n    }));\n  }\n\n  render() {\n    const [isOpen, setIsOpen] = useState(false);\n    const [isHover1, setIsHover1] = useState(false);\n    const [isHover2, setIsHover2] = useState(false);\n    const [isHover3, setIsHover3] = useState(false);\n    const [isHover4, setIsHover4] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    const hoverme1 = () => setIsHover1(!isHover1);\n\n    const hoverme2 = () => setIsHover2(!isHover2);\n\n    const hoverme3 = () => setIsHover3(!isHover3);\n\n    const hoverme4 = () => setIsHover4(!isHover4);\n\n    if (this.state.toLogin === true) {\n      return React.createElement(Redirect, {\n        to: \"/Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      color: \"light\",\n      light: true,\n      expand: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"/\",\n      className: \"nav-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Movie Fanatic Club\"), React.createElement(NavbarToggler, {\n      onClick: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      title: \"watchlist\",\n      className: \"nav-link\",\n      onMouseEnter: hoverme2,\n      onMouseOut: hoverme2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, isHover2 ? isOpen ? React.createElement(MdMovieFilter, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : \"explore\" : React.createElement(MdMovieFilter, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), isOpen ? \"    explore\" : \"\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/Login\",\n      title: \"login\",\n      className: \"nav-link\",\n      onMouseEnter: hoverme3,\n      onMouseOut: hoverme3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, isHover3 ? isOpen ? React.createElement(FaUserSecret, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }) : \"login\" : React.createElement(FaUserSecret, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), isOpen ? \"   login\" : \"\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      title: \"search\",\n      className: \"nav-link\",\n      onMouseEnter: hoverme4,\n      onMouseOut: hoverme4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, isHover4 ? isOpen ? React.createElement(MdLocationSearching, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : \"search\" : React.createElement(MdLocationSearching, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), isOpen ? \"   search\" : \"\")))))));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/molli/Desktop/full-stack/movie-fanatic-club/src/components/Navbar.js"],"names":["React","useState","FaRegNewspaper","FaUserSecret","MdMovieFilter","MdLocationSearching","Container","Row","Col","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","NavbarText","InTheater","Redirect","NavLink","Link","NavBar","Component","constructor","props","state","value","toLogin","handleLoginRedirect","event","setState","render","isOpen","setIsOpen","isHover1","setIsHover1","isHover2","setIsHover2","isHover3","setIsHover3","isHover4","setIsHover4","toggle","hoverme1","hoverme2","hoverme3","hoverme4"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaRegNewspaper, FaUserSecret } from \"react-icons/fa\";\r\nimport { MdMovieFilter, MdLocationSearching } from \"react-icons/md\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from \"reactstrap\";\r\nimport \"../index.css\";\r\nimport InTheater from \"./inTheater\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport { Redirect, NavLink, Link } from \"react-router-dom\";\r\n\r\n//function NavBar()\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // value: name of city user entered\r\n    /* toEvents: default value is false. when user hits submit button on landing page, the onClick attribute\r\n                 calls the handleSubmit function, which switches 'toEvents' to true, meaning 'the user wants to \r\n                 be routed to the Events page.' Then, when Landing returns, if toEvents is true, it redirects to\r\n                 the events page instead of rendering the Landing page\r\n    */\r\n    this.state = { value: \"\", toLogin: false };\r\n\r\n    //this.handleChange = this.handleChange.bind(this);\r\n    //this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleLoginRedirect(event) {\r\n    // set state \"toEvents\" to true\r\n    this.setState(() => ({\r\n      toLogin: true\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isHover1, setIsHover1] = useState(false);\r\n    const [isHover2, setIsHover2] = useState(false);\r\n    const [isHover3, setIsHover3] = useState(false);\r\n    const [isHover4, setIsHover4] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const hoverme1 = () => setIsHover1(!isHover1);\r\n    const hoverme2 = () => setIsHover2(!isHover2);\r\n    const hoverme3 = () => setIsHover3(!isHover3);\r\n    const hoverme4 = () => setIsHover4(!isHover4);\r\n\r\n    if (this.state.toLogin === true) {\r\n      return <Redirect to=\"/Login\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarBrand href=\"/\" className=\"nav-brand\">\r\n              Movie Fanatic Club\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink\r\n                    to=\"/\"\r\n                    title=\"watchlist\"\r\n                    className=\"nav-link\"\r\n                    onMouseEnter={hoverme2}\r\n                    onMouseOut={hoverme2}\r\n                  >\r\n                    {isHover2 ? (\r\n                      isOpen ? (\r\n                        <MdMovieFilter className=\"nav-icon\" />\r\n                      ) : (\r\n                        \"explore\"\r\n                      )\r\n                    ) : (\r\n                      <MdMovieFilter className=\"nav-icon\" />\r\n                    )}\r\n                    {isOpen ? \"    explore\" : \"\"}\r\n                  </NavLink>\r\n                </NavItem>\r\n                {/*<NavItem>\r\n                    <NavLink href=\"/\" title=\"notification\" className=\"nav-link\" onMouseEnter={hoverme1} onMouseOut={hoverme1}>{isHover1?isOpen?<FaRegNewspaper className=\"nav-icon\"/>:\"notification\":<FaRegNewspaper className=\"nav-icon\"/>}{isOpen?\"   notification\":\"\"}</NavLink>\r\n                  </NavItem>*/}\r\n                <NavItem>\r\n                  <NavLink\r\n                    to=\"/Login\"\r\n                    title=\"login\"\r\n                    className=\"nav-link\"\r\n                    onMouseEnter={hoverme3}\r\n                    onMouseOut={hoverme3}\r\n                  >\r\n                    {isHover3 ? (\r\n                      isOpen ? (\r\n                        <FaUserSecret className=\"nav-icon\" />\r\n                      ) : (\r\n                        \"login\"\r\n                      )\r\n                    ) : (\r\n                      <FaUserSecret className=\"nav-icon\" />\r\n                    )}\r\n                    {isOpen ? \"   login\" : \"\"}\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    to=\"/\"\r\n                    title=\"search\"\r\n                    className=\"nav-link\"\r\n                    onMouseEnter={hoverme4}\r\n                    onMouseOut={hoverme4}\r\n                  >\r\n                    {isHover4 ? (\r\n                      isOpen ? (\r\n                        <MdLocationSearching className=\"nav-icon\" />\r\n                      ) : (\r\n                        \"search\"\r\n                      )\r\n                    ) : (\r\n                      <MdLocationSearching className=\"nav-icon\" />\r\n                    )}\r\n                    {isOpen ? \"   search\" : \"\"}\r\n                  </NavLink>\r\n                </NavItem>\r\n                {/*<UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      Options\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        \r\n                      </DropdownItem>\r\n                      <DropdownItem>\r\n                        \r\n                      </DropdownItem>\r\n                      <DropdownItem divider />\r\n                      <DropdownItem>\r\n                        ！\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>*/}\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}