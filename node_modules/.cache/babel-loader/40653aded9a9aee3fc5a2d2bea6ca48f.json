{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molli\\\\Desktop\\\\full-stack\\\\movie-fanatic-club\\\\movie-fanatic-club\\\\src\\\\components\\\\Watchlist.js\";\n// body component for a user's watchlist\nimport React from \"react\";\nimport \"../index.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { auth, db } from \"./Firebase\";\nimport firebase, { DocumentReference, DocumentSnapshot } from \"firebase\";\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, TabContent, TabPane, Nav, NavItem, Row, Col, Media, Button } from \"reactstrap\";\nimport { FaImdb } from \"react-icons/fa\";\nimport { TiMediaFastForward, TiEqualsOutline } from \"react-icons/ti\";\nimport Icon from \"react-fa\";\nimport rp from \"request-promise\";\nimport cheerio from \"cheerio\";\nimport Carousel from \"@brainhubeu/react-carousel\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\nimport ComingSoon from \"./comingSoon\";\nimport classnames from \"classnames\";\n\nclass Watchlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      apis: [],\n      dates: [],\n      activeTab: \"\"\n    };\n    this.handleWatchlist = this.handleWatchlist.bind(this);\n  }\n\n  async componentDidMount() {\n    if (auth.currentUser != null) {\n      var docRef = db.collection(\"user\").doc(auth.currentUser.email);\n      docRef.get().then(function (doc) {\n        if (doc.exists) {\n          console.log(\"watchlist:\", doc.data().watchlist);\n          console.log(\"length of watchlist:\", doc.data().watchlist.length);\n          let APIs = [];\n\n          for (let i = 0; i < doc.data().watchlist.length; i++) {\n            let name = doc.data().watchlist[i];\n            const URL = \"http://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\n            fetch(URL).then(result => result.json()).then(result => {\n              // if (result.results.length == 0) {\n              //   throw \"Failed to retrieve\";\n              // }\n              console.log(\"api call result: \", result);\n              APIs.push(result); //return result.results;\n            });\n          }\n\n          this.setState({\n            apis: APIs\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n    } else {\n      console.log(\"currentUser is null\");\n    }\n  }\n\n  handleWatchlist() {} // below I added a link back to the landing page, just to make our lives easier while testing\n  // we'll remove it when we actually build the events page, since users won't need to go back to\n  // the landing page\n\n\n  render() {\n    const toggle = tab => {\n      if (this.state.activeTab !== tab) this.setState({\n        activeTab: tab\n      });\n    };\n\n    var tabNames = [];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Watchlist\"), React.createElement(\"div\", {\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      tabs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.dates.map(item => {\n      const tabName = item.split(\" \")[1].slice(0, 3) + \" \" + item.split(\" \")[2];\n      if (tabNames.includes(tabName)) return \"\";else {\n        tabNames.push(tabName);\n        return React.createElement(NavItem, {\n          key: item,\n          className: \"nav-items\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: classnames({\n            active: this.state.activeTab === tabName\n          }),\n          onClick: () => {\n            toggle(tabName);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"tab-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, tabName)));\n      }\n    })), React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, tabNames.map(item => {\n      return React.createElement(TabPane, {\n        tabId: item,\n        key: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.state.apis.filter(data => data.Released.slice(3, 11) === item).map(data => {\n        console.log(\"DATA INSIDE MAP IS: \", data);\n        return React.createElement(Col, {\n          sm: \"6\",\n          key: data.Title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(Media, {\n          className: \"media-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(Media, {\n          left: true,\n          className: \"media-pic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"https://www.imdb.com/title/\" + data.imdbID,\n          title: \"link\",\n          rel: \"noopener noreferrer\",\n          target: \"_blank\",\n          className: \"media-pic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: data.Title,\n          src: data.Poster,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }))), React.createElement(Media, {\n          body: true,\n          className: \"cards-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: {\n            pathname: \"./Movie\",\n            id: data.imdbID\n          },\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, data.Title)), React.createElement(CardSubtitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, data.Rated, \" | \", data.Runtime, \" | \", data.Genre, \" |\", \" \", data.Released), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Director: \", data.Director), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Actors: \", data.Actors), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"Plot: \", data.Plot))));\n      })));\n    }))));\n  }\n\n}\n\nexport default Watchlist;","map":{"version":3,"sources":["C:/Users/molli/Desktop/full-stack/movie-fanatic-club/movie-fanatic-club/src/components/Watchlist.js"],"names":["React","NavLink","auth","db","firebase","DocumentReference","DocumentSnapshot","Card","CardText","CardBody","CardTitle","CardSubtitle","TabContent","TabPane","Nav","NavItem","Row","Col","Media","Button","FaImdb","TiMediaFastForward","TiEqualsOutline","Icon","rp","cheerio","Carousel","ComingSoon","classnames","Watchlist","Component","constructor","props","state","value","apis","dates","activeTab","handleWatchlist","bind","componentDidMount","currentUser","docRef","collection","doc","email","get","then","exists","console","log","data","watchlist","length","APIs","i","name","URL","fetch","result","json","push","setState","catch","error","render","toggle","tab","tabNames","map","item","tabName","split","slice","includes","active","filter","Released","Title","imdbID","Poster","pathname","id","Rated","Runtime","Genre","Director","Actors","Plot"],"mappings":"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","sourcesContent":["// body component for a user's watchlist\r\n\r\nimport React from \"react\";\r\nimport \"../index.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { auth, db } from \"./Firebase\";\r\nimport firebase, { DocumentReference, DocumentSnapshot } from \"firebase\";\r\n\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  Row,\r\n  Col,\r\n  Media,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { FaImdb } from \"react-icons/fa\";\r\nimport { TiMediaFastForward, TiEqualsOutline } from \"react-icons/ti\";\r\nimport Icon from \"react-fa\";\r\nimport rp from \"request-promise\";\r\nimport cheerio from \"cheerio\";\r\nimport Carousel from \"@brainhubeu/react-carousel\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport ComingSoon from \"./comingSoon\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Watchlist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n      apis: [],\r\n      dates: [],\r\n      activeTab: \"\"\r\n    };\r\n    this.handleWatchlist = this.handleWatchlist.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (auth.currentUser != null) {\r\n      var docRef = db.collection(\"user\").doc(auth.currentUser.email);\r\n\r\n      docRef\r\n        .get()\r\n        .then(function(doc) {\r\n          if (doc.exists) {\r\n            console.log(\"watchlist:\", doc.data().watchlist);\r\n\r\n            console.log(\"length of watchlist:\", doc.data().watchlist.length);\r\n\r\n            let APIs = [];\r\n            for (let i = 0; i < doc.data().watchlist.length; i++) {\r\n              let name = doc.data().watchlist[i];\r\n              const URL = \"http://www.omdbapi.com/?apikey=1e54e73e&i=\" + name;\r\n              fetch(URL)\r\n                .then(result => result.json())\r\n                .then(result => {\r\n                  // if (result.results.length == 0) {\r\n                  //   throw \"Failed to retrieve\";\r\n                  // }\r\n                  console.log(\"api call result: \", result);\r\n                  APIs.push(result);\r\n                  //return result.results;\r\n                });\r\n            }\r\n            this.setState({\r\n              apis: APIs\r\n            });\r\n          } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    } else {\r\n      console.log(\"currentUser is null\");\r\n    }\r\n  }\r\n\r\n  handleWatchlist() {}\r\n\r\n  // below I added a link back to the landing page, just to make our lives easier while testing\r\n  // we'll remove it when we actually build the events page, since users won't need to go back to\r\n  // the landing page\r\n  render() {\r\n    const toggle = tab => {\r\n      if (this.state.activeTab !== tab) this.setState({ activeTab: tab });\r\n    };\r\n\r\n    var tabNames = [];\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"section-title\">Watchlist</h2>\r\n\r\n        <div className=\"tabs\">\r\n          <Nav tabs>\r\n            {this.state.dates.map(item => {\r\n              const tabName =\r\n                item.split(\" \")[1].slice(0, 3) + \" \" + item.split(\" \")[2];\r\n              if (tabNames.includes(tabName)) return \"\";\r\n              else {\r\n                tabNames.push(tabName);\r\n                return (\r\n                  <NavItem key={item} className=\"nav-items\">\r\n                    <a\r\n                      className={classnames({\r\n                        active: this.state.activeTab === tabName\r\n                      })}\r\n                      onClick={() => {\r\n                        toggle(tabName);\r\n                      }}\r\n                    >\r\n                      <button className=\"tab-btn\">{tabName}</button>\r\n                    </a>\r\n                  </NavItem>\r\n                );\r\n              }\r\n            })}\r\n          </Nav>\r\n          <TabContent activeTab={this.state.activeTab}>\r\n            {tabNames.map(item => {\r\n              return (\r\n                <TabPane tabId={item} key={item}>\r\n                  <Row>\r\n                    {this.state.apis\r\n                      .filter(data => data.Released.slice(3, 11) === item)\r\n                      .map(data => {\r\n                        console.log(\"DATA INSIDE MAP IS: \", data);\r\n                        return (\r\n                          <Col sm=\"6\" key={data.Title}>\r\n                            <Media className=\"media-body\">\r\n                              <Media left className=\"media-pic\">\r\n                                <a\r\n                                  href={\r\n                                    \"https://www.imdb.com/title/\" + data.imdbID\r\n                                  }\r\n                                  title=\"link\"\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                  className=\"media-pic\"\r\n                                >\r\n                                  <img alt={data.Title} src={data.Poster} />\r\n                                </a>\r\n                              </Media>\r\n                              <Media body className=\"cards-body\">\r\n                                <CardTitle>\r\n                                  <NavLink\r\n                                    to={{\r\n                                      pathname: \"./Movie\",\r\n                                      id: data.imdbID\r\n                                    }}\r\n                                    className=\"card-title\"\r\n                                  >\r\n                                    {data.Title}\r\n                                  </NavLink>\r\n                                </CardTitle>\r\n                                <CardSubtitle>\r\n                                  {data.Rated} | {data.Runtime} | {data.Genre} |{\" \"}\r\n                                  {data.Released}\r\n                                </CardSubtitle>\r\n                                <CardText>Director: {data.Director}</CardText>\r\n                                <CardText>Actors: {data.Actors}</CardText>\r\n                                <CardText>Plot: {data.Plot}</CardText>\r\n                              </Media>\r\n                            </Media>\r\n                          </Col>\r\n                        );\r\n                      })}\r\n                  </Row>\r\n                </TabPane>\r\n              );\r\n            })}\r\n          </TabContent>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Watchlist;\r\n"]},"metadata":{},"sourceType":"module"}