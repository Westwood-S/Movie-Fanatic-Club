{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molli\\\\Desktop\\\\full-stack\\\\movie-fanatic-club\\\\src\\\\components\\\\Navbar.js\";\nimport React, { useState } from \"react\";\nimport { FaRegNewspaper, FaUserSecret } from \"react-icons/fa\";\nimport { MdMovieFilter, MdLocationSearching } from \"react-icons/md\";\nimport { Container, Row, Col, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem, NavbarText } from \"reactstrap\";\nimport \"../index.css\";\nimport InTheater from \"./inTheater\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\nimport { Redirect, NavLink, Link } from \"react-router-dom\";\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props); // value: name of city user entered\n\n    /* toEvents: default value is false. when user hits submit button on landing page, the onClick attribute\r\n                 calls the handleSubmit function, which switches 'toEvents' to true, meaning 'the user wants to \r\n                 be routed to the Events page.' Then, when Landing returns, if toEvents is true, it redirects to\r\n                 the events page instead of rendering the Landing page\r\n    */\n\n    this.state = {\n      value: \"\",\n      toLogin: false,\n      isOpen: false,\n      isHover1: false,\n      isHover2: false,\n      isHover3: false,\n      isHover4: false\n    };\n    this.handleLoginRedirect = this.handleLoginRedirect.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.hoverme = this.hoverme.bind(this);\n  }\n\n  handleLoginRedirect(event) {\n    // set state \"toEvents\" to true\n    this.setState(() => ({\n      toLogin: true\n    }));\n  }\n\n  toggle() {\n    this.setState(() => ({\n      isOpen: !this.state.isOpen\n    }));\n  }\n\n  hoverme(num) {\n    if (num === 1) {\n      this.setState(() => ({\n        isHover1: !this.state.isHover1\n      }));\n    } else if (num === 2) {\n      this.setState(() => ({\n        isHover2: !this.state.isHover2\n      }));\n    } else if (num === 3) {\n      this.setState(() => ({\n        isHover3: !this.state.isHover3\n      }));\n    } else {\n      this.setState(() => ({\n        isHover4: !this.state.isHover4\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      color: \"light\",\n      light: true,\n      expand: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"/\",\n      className: \"nav-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Movie Fanatic Club\"), React.createElement(NavbarToggler, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      title: \"watchlist\",\n      className: \"nav-link\",\n      onMouseEnter: () => {\n        this.hoverme(2);\n      },\n      onMouseOut: () => {\n        this.hoverme(2);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.isHover2 ? this.state.isOpen ? React.createElement(MdMovieFilter, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }) : \"explore\" : React.createElement(MdMovieFilter, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), this.state.isOpen ? \"    explore\" : \"\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/Login\",\n      title: \"login\",\n      className: \"nav-link\",\n      onMouseEnter: () => {\n        this.handleLoginRedirect();\n      },\n      onMouseOut: () => {\n        this.hoverme(3);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.isHover3 ? this.state.isOpen ? React.createElement(FaUserSecret, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }) : \"login\" : React.createElement(FaUserSecret, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), this.state.isOpen ? \"   login\" : \"\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      title: \"search\",\n      className: \"nav-link\",\n      onMouseEnter: () => {\n        this.hoverme(4);\n      },\n      onMouseOut: () => {\n        this.hoverme(4);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.isHover4 ? this.state.isOpen ? React.createElement(MdLocationSearching, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }) : \"search\" : React.createElement(MdLocationSearching, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), this.state.isOpen ? \"   search\" : \"\")))))));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/molli/Desktop/full-stack/movie-fanatic-club/src/components/Navbar.js"],"names":["React","useState","FaRegNewspaper","FaUserSecret","MdMovieFilter","MdLocationSearching","Container","Row","Col","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","NavbarText","InTheater","Redirect","NavLink","Link","NavBar","Component","constructor","props","state","value","toLogin","isOpen","isHover1","isHover2","isHover3","isHover4","handleLoginRedirect","bind","toggle","hoverme","event","setState","num","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaRegNewspaper, FaUserSecret } from \"react-icons/fa\";\r\nimport { MdMovieFilter, MdLocationSearching } from \"react-icons/md\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from \"reactstrap\";\r\nimport \"../index.css\";\r\nimport InTheater from \"./inTheater\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport { Redirect, NavLink, Link } from \"react-router-dom\";\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // value: name of city user entered\r\n    /* toEvents: default value is false. when user hits submit button on landing page, the onClick attribute\r\n                 calls the handleSubmit function, which switches 'toEvents' to true, meaning 'the user wants to \r\n                 be routed to the Events page.' Then, when Landing returns, if toEvents is true, it redirects to\r\n                 the events page instead of rendering the Landing page\r\n    */\r\n    this.state = {\r\n      value: \"\",\r\n      toLogin: false,\r\n      isOpen: false,\r\n      isHover1: false,\r\n      isHover2: false,\r\n      isHover3: false,\r\n      isHover4: false\r\n    };\r\n\r\n    this.handleLoginRedirect = this.handleLoginRedirect.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.hoverme = this.hoverme.bind(this);\r\n  }\r\n\r\n  handleLoginRedirect(event) {\r\n    // set state \"toEvents\" to true\r\n    this.setState(() => ({\r\n      toLogin: true\r\n    }));\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(() => ({\r\n      isOpen: !this.state.isOpen\r\n    }));\r\n  }\r\n\r\n  hoverme(num) {\r\n    if (num === 1) {\r\n      this.setState(() => ({\r\n        isHover1: !this.state.isHover1\r\n      }));\r\n    } else if (num === 2) {\r\n      this.setState(() => ({\r\n        isHover2: !this.state.isHover2\r\n      }));\r\n    } else if (num === 3) {\r\n      this.setState(() => ({\r\n        isHover3: !this.state.isHover3\r\n      }));\r\n    } else {\r\n      this.setState(() => ({\r\n        isHover4: !this.state.isHover4\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarBrand href=\"/\" className=\"nav-brand\">\r\n              Movie Fanatic Club\r\n            </NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink\r\n                    to=\"/\"\r\n                    title=\"watchlist\"\r\n                    className=\"nav-link\"\r\n                    onMouseEnter={() => {\r\n                      this.hoverme(2);\r\n                    }}\r\n                    onMouseOut={() => {\r\n                      this.hoverme(2);\r\n                    }}\r\n                  >\r\n                    {this.state.isHover2 ? (\r\n                      this.state.isOpen ? (\r\n                        <MdMovieFilter className=\"nav-icon\" />\r\n                      ) : (\r\n                        \"explore\"\r\n                      )\r\n                    ) : (\r\n                      <MdMovieFilter className=\"nav-icon\" />\r\n                    )}\r\n                    {this.state.isOpen ? \"    explore\" : \"\"}\r\n                  </NavLink>\r\n                </NavItem>\r\n                {/*<NavItem>\r\n                    <NavLink href=\"/\" title=\"notification\" className=\"nav-link\" onMouseEnter={hoverme1} onMouseOut={hoverme1}>{isHover1?isOpen?<FaRegNewspaper className=\"nav-icon\"/>:\"notification\":<FaRegNewspaper className=\"nav-icon\"/>}{isOpen?\"   notification\":\"\"}</NavLink>\r\n                  </NavItem>*/}\r\n                <NavItem>\r\n                  <NavLink\r\n                    to=\"/Login\"\r\n                    title=\"login\"\r\n                    className=\"nav-link\"\r\n                    onMouseEnter={() => {\r\n                      this.handleLoginRedirect();\r\n                    }}\r\n                    onMouseOut={() => {\r\n                      this.hoverme(3);\r\n                    }}\r\n                  >\r\n                    {this.state.isHover3 ? (\r\n                      this.state.isOpen ? (\r\n                        <FaUserSecret className=\"nav-icon\" />\r\n                      ) : (\r\n                        \"login\"\r\n                      )\r\n                    ) : (\r\n                      <FaUserSecret className=\"nav-icon\" />\r\n                    )}\r\n                    {this.state.isOpen ? \"   login\" : \"\"}\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    to=\"/\"\r\n                    title=\"search\"\r\n                    className=\"nav-link\"\r\n                    onMouseEnter={() => {\r\n                      this.hoverme(4);\r\n                    }}\r\n                    onMouseOut={() => {\r\n                      this.hoverme(4);\r\n                    }}\r\n                  >\r\n                    {this.state.isHover4 ? (\r\n                      this.state.isOpen ? (\r\n                        <MdLocationSearching className=\"nav-icon\" />\r\n                      ) : (\r\n                        \"search\"\r\n                      )\r\n                    ) : (\r\n                      <MdLocationSearching className=\"nav-icon\" />\r\n                    )}\r\n                    {this.state.isOpen ? \"   search\" : \"\"}\r\n                  </NavLink>\r\n                </NavItem>\r\n                {/*<UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                      Options\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>\r\n                        \r\n                      </DropdownItem>\r\n                      <DropdownItem>\r\n                        \r\n                      </DropdownItem>\r\n                      <DropdownItem divider />\r\n                      <DropdownItem>\r\n                        ！\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>*/}\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}