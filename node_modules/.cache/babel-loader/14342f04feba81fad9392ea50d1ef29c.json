{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\molli\\\\Desktop\\\\full-stack\\\\movie-fanatic-club\\\\movie-fanatic-club\\\\src\\\\components\\\\Navbar.js\";\nimport React from \"react\";\nimport { FaRegNewspaper, FaUserSecret } from \"react-icons/fa\";\nimport { FiGrid, FiXCircle } from \"react-icons/fi\";\nimport { MdMovieFilter, MdLocationSearching } from \"react-icons/md\";\nimport { IoMdLogOut } from \"react-icons/io\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Popover, Button, Modal, ModalBody, Media } from \"reactstrap\";\nimport \"../index.css\";\nimport { Redirect, NavLink, Link } from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport { auth, db } from \"./Firebase\";\nimport firebase from \"firebase\";\nimport Search from \"./Search\";\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props); // value: name of city user entered\n\n    /* toEvents: default value is false. when user hits submit button on landing page, the onClick attribute\r\n                 calls the handleSubmit function, which switches 'toEvents' to true, meaning 'the user wants to \r\n                 be routed to the Events page.' Then, when Landing returns, if toEvents is true, it redirects to\r\n                 the events page instead of rendering the Landing page\r\n    */\n\n    this.state = {\n      value: \"\",\n      isSignedIn: false,\n      isOpen: false,\n      isToggleSignInOpen: false,\n      isToggleSearchOpen: false,\n      isHover1: false,\n      isHover2: false,\n      isHover3: false,\n      isHover4: false,\n      isHover5: false,\n      isHover6: false,\n      searchLoading: true,\n      movies: []\n    };\n    this.uiConfig = {\n      signInFlow: \"popup\",\n      signInSuccessUrl: \"/\",\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID]\n    };\n    this.handleLoginRedirect = this.handleLoginRedirect.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleSignIn = this.toggleSignIn.bind(this);\n    this.toggleSearch = this.toggleSearch.bind(this);\n    this.hoverme = this.hoverme.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  handleLoginRedirect(event) {\n    // set state \"toEvents\" to true\n    this.setState(() => ({\n      toLogin: true\n    }));\n  } // navbar toggle for small screen\n\n\n  toggle() {\n    this.setState(() => ({\n      isOpen: !this.state.isOpen\n    }));\n  } // signin popup window toggle\n\n\n  toggleSignIn() {\n    this.setState(() => ({\n      isToggleSignInOpen: !this.state.isToggleSignInOpen\n    }));\n  } //search collapse\n\n\n  toggleSearch() {\n    this.setState(() => ({\n      isToggleSearchOpen: !this.state.isToggleSearchOpen,\n      movies: []\n    }));\n  }\n\n  hoverme(num) {\n    if (num === 1) {\n      this.setState(() => ({\n        isHover1: !this.state.isHover1\n      }));\n    } else if (num === 2) {\n      this.setState(() => ({\n        isHover2: !this.state.isHover2\n      }));\n    } else if (num === 3) {\n      this.setState(() => ({\n        isHover3: !this.state.isHover3\n      }));\n    } else if (num === 4) {\n      this.setState(() => ({\n        isHover4: !this.state.isHover4\n      }));\n    } else if (num === 5) {\n      this.setState(() => ({\n        isHover5: !this.state.isHover5\n      }));\n    } else if (num === 6) {\n      this.setState(() => ({\n        isHover6: !this.state.isHover6\n      }));\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function () {\n      // Existing and future Auth states are now persisted in the current\n      // session only. Closing the window would clear any existing state even\n      // if a user forgets to sign out.\n      // ...\n      // New sign-in will be persisted with session persistence.\n      // return firebase.auth().signInWithEmailAndPassword(email, password);\n      console.log(\"auth persistence set to LOCAL\");\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n    auth.onAuthStateChanged(user => {\n      this.setState({\n        isSignedIn: !!user\n      });\n\n      if (user) {\n        const userRef = db.collection(\"user\").doc(auth.currentUser.email);\n        userRef.get().then(function (doc) {\n          if (doc.exists) {\n            userRef.update({\n              name: auth.currentUser.displayName,\n              photo: auth.currentUser.photoURL,\n              uid: auth.currentUser.uid\n            });\n          } else {\n            userRef.set({\n              name: auth.currentUser.displayName,\n              email: auth.currentUser.email,\n              photo: auth.currentUser.photoURL,\n              uid: auth.currentUser.uid,\n              watchlist: {}\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    });\n  } // when click on the outside, the signin popup window will disappear\n\n\n  handleClick() {\n    if (!this.state.isToggleSignInOpen) {\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\n    }\n\n    this.setState(prevState => ({\n      isToggleSignInOpen: !prevState.isToggleSignInOpen\n    }));\n  }\n\n  handleOutsideClick(e) {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n\n    this.handleClick();\n  } //search omdb api\n\n\n  search(searchValue) {\n    this.setState({\n      searchLoading: true,\n      movies: []\n    });\n    fetch(\"https://www.omdbapi.com/?apikey=1e54e73e&s=\" + searchValue).then(response => {\n      response.json().then(data => {\n        this.setState({\n          movies: data.Search\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      color: \"light\",\n      light: true,\n      expand: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      className: \"nav-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Movie Fanatic Club\"), React.createElement(NavbarToggler, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: this.state.isOpen,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto\",\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, this.state.isSignedIn ? React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      title: \"if you wake up in the morning and have some ideas, you have this obsession that you have to make them, then you are an artist - Marina Abramovi\\u0107\",\n      className: \"nav-link nav-fa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, auth.currentUser.displayName)) : \"\", this.state.isSignedIn ? React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/Watchlist\",\n      className: \"nav-link nav-fa\",\n      onMouseEnter: () => {\n        this.hoverme(5);\n      },\n      onMouseOut: () => {\n        this.hoverme(5);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, this.state.isHover5 ? this.state.isOpen ? React.createElement(MdMovieFilter, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }) : \"watchlist\" : React.createElement(MdMovieFilter, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), this.state.isOpen ? \"   watchlist\" : \"\")) : \"\", this.state.isSignedIn ? React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      className: \"nav-link nav-fa\",\n      onMouseEnter: () => {\n        this.hoverme(1);\n      },\n      onMouseOut: () => {\n        this.hoverme(1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.state.isHover1 ? this.state.isOpen ? React.createElement(FaRegNewspaper, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }) : \"notification\" : React.createElement(FaRegNewspaper, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), this.state.isOpen ? \"   notification\" : \"\")) : \"\", React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"./Explore\",\n      className: \"nav-link nav-fa\",\n      onMouseEnter: () => {\n        this.hoverme(2);\n      },\n      onMouseOut: () => {\n        this.hoverme(2);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, this.state.isHover2 ? this.state.isOpen ? React.createElement(FiGrid, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }) : \"explore\" : React.createElement(FiGrid, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), this.state.isOpen ? \"    explore\" : \"\")), this.state.isSignedIn ? \"\" : React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      className: \"nav-link nav-fa\",\n      onMouseEnter: () => {\n        this.handleLoginRedirect();\n        this.hoverme(3);\n      },\n      onMouseOut: () => {\n        this.hoverme(3);\n      },\n      onClick: () => {\n        this.toggleSignIn();\n        this.handleClick();\n      },\n      id: \"Popover1\",\n      type: \"button\",\n      ref: node => {\n        this.node = node;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, this.state.isHover3 ? this.state.isOpen ? React.createElement(FaUserSecret, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }) : \"login\" : React.createElement(FaUserSecret, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), this.state.isOpen ? \"   login\" : \"\"), React.createElement(Popover, {\n      placement: \"bottom\",\n      isOpen: this.state.isToggleSignInOpen,\n      target: \"Popover1\",\n      toggle: this.toggleSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(StyledFirebaseAuth, {\n      show: this.state.isToggleSignInOpen,\n      uiConfig: this.uiConfig,\n      firebaseAuth: auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }))), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      className: \"nav-link nav-fa\",\n      onMouseEnter: () => {\n        this.hoverme(4);\n      },\n      onMouseOut: () => {\n        this.hoverme(4);\n      },\n      onClick: () => {\n        this.toggleSearch();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, this.state.isHover4 ? this.state.isOpen ? React.createElement(MdLocationSearching, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }) : \"search\" : React.createElement(MdLocationSearching, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }), this.state.isOpen ? \"   search\" : \"\"), React.createElement(Modal, {\n      isOpen: this.state.isToggleSearchOpen,\n      toggle: this.toggleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(Search, {\n      search: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"btn-search\",\n      color: \"link\",\n      onClick: this.toggleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"maybe later \", React.createElement(FiXCircle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }))), this.state.movies ? this.state.movies.map((movie, index) => React.createElement(NavLink, {\n      key: movie.Title,\n      to: {\n        pathname: \"./Movie\",\n        id: movie.imdbID\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Media, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Media, {\n      left: true,\n      className: \"search-pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: movie.Title,\n      src: movie.Poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    })), React.createElement(Media, {\n      body: true,\n      className: \"media-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, React.createElement(Media, {\n      heading: true,\n      className: \"media-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, index + 1, \". \", movie.Title, \" (\", movie.Year, \")\")))))) : \"\")), this.state.isSignedIn ? React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/\",\n      className: \"nav-link nav-fa\",\n      onMouseEnter: () => {\n        this.hoverme(6);\n      },\n      onMouseOut: () => {\n        this.hoverme(6);\n      },\n      onClick: () => {\n        auth.signOut();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, this.state.isHover6 ? this.state.isOpen ? React.createElement(IoMdLogOut, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }) : \"logout\" : React.createElement(IoMdLogOut, {\n      className: \"nav-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }), this.state.isOpen ? \"   logout\" : \"\")) : \"\")))));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/molli/Desktop/full-stack/movie-fanatic-club/movie-fanatic-club/src/components/Navbar.js"],"names":["React","FaRegNewspaper","FaUserSecret","FiGrid","FiXCircle","MdMovieFilter","MdLocationSearching","IoMdLogOut","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Popover","Button","Modal","ModalBody","Media","Redirect","NavLink","Link","StyledFirebaseAuth","auth","db","firebase","Search","NavBar","Component","constructor","props","state","value","isSignedIn","isOpen","isToggleSignInOpen","isToggleSearchOpen","isHover1","isHover2","isHover3","isHover4","isHover5","isHover6","searchLoading","movies","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","GithubAuthProvider","handleLoginRedirect","bind","toggle","toggleSignIn","toggleSearch","hoverme","handleClick","handleOutsideClick","search","event","setState","toLogin","num","componentDidMount","setPersistence","Auth","Persistence","LOCAL","then","console","log","catch","error","errorCode","code","errorMessage","message","onAuthStateChanged","user","userRef","collection","doc","currentUser","email","get","exists","update","name","displayName","photo","photoURL","uid","set","watchlist","document","addEventListener","removeEventListener","prevState","e","node","contains","target","searchValue","fetch","response","json","data","err","render","map","movie","index","Title","pathname","id","imdbID","Poster","Year","signOut"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FaRegNewspaper, FaUserSecret } from \"react-icons/fa\";\r\nimport { FiGrid, FiXCircle } from \"react-icons/fi\";\r\nimport { MdMovieFilter, MdLocationSearching } from \"react-icons/md\";\r\nimport { IoMdLogOut } from \"react-icons/io\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Popover,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  Media\r\n} from \"reactstrap\";\r\nimport \"../index.css\";\r\nimport { Redirect, NavLink, Link } from \"react-router-dom\";\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\nimport { auth, db } from \"./Firebase\";\r\nimport firebase from \"firebase\";\r\nimport Search from \"./Search\";\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // value: name of city user entered\r\n    /* toEvents: default value is false. when user hits submit button on landing page, the onClick attribute\r\n                 calls the handleSubmit function, which switches 'toEvents' to true, meaning 'the user wants to \r\n                 be routed to the Events page.' Then, when Landing returns, if toEvents is true, it redirects to\r\n                 the events page instead of rendering the Landing page\r\n    */\r\n    this.state = {\r\n      value: \"\",\r\n      isSignedIn: false,\r\n      isOpen: false,\r\n      isToggleSignInOpen: false,\r\n      isToggleSearchOpen: false,\r\n      isHover1: false,\r\n      isHover2: false,\r\n      isHover3: false,\r\n      isHover4: false,\r\n      isHover5: false,\r\n      isHover6: false,\r\n      searchLoading: true,\r\n      movies: []\r\n    };\r\n\r\n    this.uiConfig = {\r\n      signInFlow: \"popup\",\r\n      signInSuccessUrl: \"/\",\r\n      signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n        firebase.auth.GithubAuthProvider.PROVIDER_ID\r\n      ]\r\n    };\r\n\r\n    this.handleLoginRedirect = this.handleLoginRedirect.bind(this);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.toggleSignIn = this.toggleSignIn.bind(this);\r\n    this.toggleSearch = this.toggleSearch.bind(this);\r\n    this.hoverme = this.hoverme.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\r\n    this.search = this.search.bind(this);\r\n  }\r\n\r\n  handleLoginRedirect(event) {\r\n    // set state \"toEvents\" to true\r\n    this.setState(() => ({\r\n      toLogin: true\r\n    }));\r\n  }\r\n\r\n  // navbar toggle for small screen\r\n  toggle() {\r\n    this.setState(() => ({\r\n      isOpen: !this.state.isOpen\r\n    }));\r\n  }\r\n\r\n  // signin popup window toggle\r\n  toggleSignIn() {\r\n    this.setState(() => ({\r\n      isToggleSignInOpen: !this.state.isToggleSignInOpen\r\n    }));\r\n  }\r\n\r\n  //search collapse\r\n  toggleSearch() {\r\n    this.setState(() => ({\r\n      isToggleSearchOpen: !this.state.isToggleSearchOpen,\r\n      movies: []\r\n    }));\r\n  }\r\n\r\n  hoverme(num) {\r\n    if (num === 1) {\r\n      this.setState(() => ({\r\n        isHover1: !this.state.isHover1\r\n      }));\r\n    } else if (num === 2) {\r\n      this.setState(() => ({\r\n        isHover2: !this.state.isHover2\r\n      }));\r\n    } else if (num === 3) {\r\n      this.setState(() => ({\r\n        isHover3: !this.state.isHover3\r\n      }));\r\n    } else if (num === 4) {\r\n      this.setState(() => ({\r\n        isHover4: !this.state.isHover4\r\n      }));\r\n    } else if (num === 5) {\r\n      this.setState(() => ({\r\n        isHover5: !this.state.isHover5\r\n      }));\r\n    } else if (num === 6) {\r\n      this.setState(() => ({\r\n        isHover6: !this.state.isHover6\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    firebase\r\n      .auth()\r\n      .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n      .then(function () {\r\n        // Existing and future Auth states are now persisted in the current\r\n        // session only. Closing the window would clear any existing state even\r\n        // if a user forgets to sign out.\r\n        // ...\r\n        // New sign-in will be persisted with session persistence.\r\n        // return firebase.auth().signInWithEmailAndPassword(email, password);\r\n        console.log(\"auth persistence set to LOCAL\");\r\n      })\r\n      .catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n      });\r\n    auth.onAuthStateChanged(user => {\r\n      this.setState({\r\n        isSignedIn: !!user\r\n      })\r\n      if (user) {\r\n        const userRef = db.collection(\"user\").doc(auth.currentUser.email)\r\n        userRef\r\n          .get()\r\n          .then(function (doc) {\r\n            if (doc.exists) {\r\n              userRef.update({\r\n                name: auth.currentUser.displayName,\r\n                photo: auth.currentUser.photoURL,\r\n                uid: auth.currentUser.uid,\r\n              })\r\n            } else {\r\n              userRef.set({\r\n                name: auth.currentUser.displayName,\r\n                email: auth.currentUser.email,\r\n                photo: auth.currentUser.photoURL,\r\n                uid: auth.currentUser.uid,\r\n                watchlist: {}\r\n              })\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  // when click on the outside, the signin popup window will disappear\r\n  handleClick() {\r\n    if (!this.state.isToggleSignInOpen) {\r\n      document.addEventListener(\"click\", this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener(\"click\", this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      isToggleSignInOpen: !prevState.isToggleSignInOpen\r\n    }));\r\n  }\r\n\r\n  handleOutsideClick(e) {\r\n    if (this.node.contains(e.target)) {\r\n      return;\r\n    }\r\n\r\n    this.handleClick();\r\n  }\r\n\r\n  //search omdb api\r\n  search(searchValue) {\r\n    this.setState({\r\n      searchLoading: true,\r\n      movies: []\r\n    });\r\n\r\n    fetch(\"https://www.omdbapi.com/?apikey=1e54e73e&s=\" + searchValue)\r\n      .then(response => {\r\n        response.json().then(data => {\r\n          this.setState({\r\n            movies: data.Search\r\n          });\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavLink to=\"/\" className=\"nav-brand\">\r\n              Movie Fanatic Club\r\n            </NavLink>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                {this.state.isSignedIn ? (\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"/\"\r\n                      title=\"if you wake up in the morning and have some ideas, you have this obsession that you have to make them, then you are an artist - Marina Abramović\"\r\n                      className=\"nav-link nav-fa\"\r\n                    >\r\n                      {auth.currentUser.displayName}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                ) : (\r\n                    \"\"\r\n                  )}\r\n                {this.state.isSignedIn ? (\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"/Watchlist\"\r\n                      className=\"nav-link nav-fa\"\r\n                      onMouseEnter={() => {\r\n                        this.hoverme(5);\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        this.hoverme(5);\r\n                      }}\r\n                    >\r\n                      {this.state.isHover5 ? (\r\n                        this.state.isOpen ? (\r\n                          <MdMovieFilter className=\"nav-icon\" />\r\n                        ) : (\r\n                            \"watchlist\"\r\n                          )\r\n                      ) : (\r\n                          <MdMovieFilter className=\"nav-icon\" />\r\n                        )}\r\n                      {this.state.isOpen ? \"   watchlist\" : \"\"}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                ) : (\r\n                    \"\"\r\n                  )}\r\n                {this.state.isSignedIn ? (\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"/\"\r\n                      className=\"nav-link nav-fa\"\r\n                      onMouseEnter={() => {\r\n                        this.hoverme(1);\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        this.hoverme(1);\r\n                      }}\r\n                    >\r\n                      {this.state.isHover1 ? (\r\n                        this.state.isOpen ? (\r\n                          <FaRegNewspaper className=\"nav-icon\" />\r\n                        ) : (\r\n                            \"notification\"\r\n                          )\r\n                      ) : (\r\n                          <FaRegNewspaper className=\"nav-icon\" />\r\n                        )}\r\n                      {this.state.isOpen ? \"   notification\" : \"\"}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                ) : (\r\n                    \"\"\r\n                  )}\r\n                <NavItem>\r\n                  <NavLink\r\n                    to=\"./Explore\"\r\n                    className=\"nav-link nav-fa\"\r\n                    onMouseEnter={() => {\r\n                      this.hoverme(2);\r\n                    }}\r\n                    onMouseOut={() => {\r\n                      this.hoverme(2);\r\n                    }}\r\n                  >\r\n                    {this.state.isHover2 ? (\r\n                      this.state.isOpen ? (\r\n                        <FiGrid className=\"nav-icon\" />\r\n                      ) : (\r\n                          \"explore\"\r\n                        )\r\n                    ) : (\r\n                        <FiGrid className=\"nav-icon\" />\r\n                      )}\r\n                    {this.state.isOpen ? \"    explore\" : \"\"}\r\n                  </NavLink>\r\n                </NavItem>\r\n                {this.state.isSignedIn ? (\r\n                  \"\"\r\n                ) : (\r\n                    <NavItem>\r\n                      <NavLink\r\n                        to=\"/\"\r\n                        className=\"nav-link nav-fa\"\r\n                        onMouseEnter={() => {\r\n                          this.handleLoginRedirect();\r\n                          this.hoverme(3);\r\n                        }}\r\n                        onMouseOut={() => {\r\n                          this.hoverme(3);\r\n                        }}\r\n                        onClick={() => {\r\n                          this.toggleSignIn();\r\n                          this.handleClick();\r\n                        }}\r\n                        id=\"Popover1\"\r\n                        type=\"button\"\r\n                        ref={node => {\r\n                          this.node = node;\r\n                        }}\r\n                      >\r\n                        {this.state.isHover3 ? (\r\n                          this.state.isOpen ? (\r\n                            <FaUserSecret className=\"nav-icon\" />\r\n                          ) : (\r\n                              \"login\"\r\n                            )\r\n                        ) : (\r\n                            <FaUserSecret className=\"nav-icon\" />\r\n                          )}\r\n                        {this.state.isOpen ? \"   login\" : \"\"}\r\n                      </NavLink>\r\n                      <Popover\r\n                        placement=\"bottom\"\r\n                        isOpen={this.state.isToggleSignInOpen}\r\n                        target=\"Popover1\"\r\n                        toggle={this.toggleSignIn}\r\n                      >\r\n                        <StyledFirebaseAuth\r\n                          show={this.state.isToggleSignInOpen}\r\n                          uiConfig={this.uiConfig}\r\n                          firebaseAuth={auth}\r\n                        />\r\n                      </Popover>\r\n                    </NavItem>\r\n                  )}\r\n                <NavItem>\r\n                  <NavLink\r\n                    to=\"/\"\r\n                    className=\"nav-link nav-fa\"\r\n                    onMouseEnter={() => {\r\n                      this.hoverme(4);\r\n                    }}\r\n                    onMouseOut={() => {\r\n                      this.hoverme(4);\r\n                    }}\r\n                    onClick={() => {\r\n                      this.toggleSearch();\r\n                    }}\r\n                  >\r\n                    {this.state.isHover4 ? (\r\n                      this.state.isOpen ? (\r\n                        <MdLocationSearching className=\"nav-icon\" />\r\n                      ) : (\r\n                          \"search\"\r\n                        )\r\n                    ) : (\r\n                        <MdLocationSearching className=\"nav-icon\" />\r\n                      )}\r\n                    {this.state.isOpen ? \"   search\" : \"\"}\r\n                  </NavLink>\r\n                  <Modal\r\n                    isOpen={this.state.isToggleSearchOpen}\r\n                    toggle={this.toggleSearch}\r\n                  >\r\n                    <ModalBody className=\"modal-body\">\r\n                      <Search search={this.search} />\r\n                      <Button\r\n                        className=\"btn-search\"\r\n                        color=\"link\"\r\n                        onClick={this.toggleSearch}\r\n                      >\r\n                        maybe later <FiXCircle />\r\n                      </Button>\r\n                    </ModalBody>\r\n                    {this.state.movies\r\n                      ? this.state.movies.map((movie, index) => (\r\n                        <NavLink\r\n                          key={movie.Title}\r\n                          to={{\r\n                            pathname: \"./Movie\",\r\n                            id: movie.imdbID\r\n                          }}\r\n                        >\r\n                          <ModalBody>\r\n                            <Media>\r\n                              <Media left className=\"search-pic\">\r\n                                <img alt={movie.Title} src={movie.Poster} />\r\n                              </Media>\r\n                              <Media body className=\"media-title\">\r\n                                <Media heading className=\"media-heading\">\r\n                                  {index + 1}. {movie.Title} ({movie.Year})\r\n                                  </Media>\r\n                              </Media>\r\n                            </Media>\r\n                          </ModalBody>\r\n                        </NavLink>\r\n                      ))\r\n                      : \"\"}\r\n                  </Modal>\r\n                </NavItem>\r\n                {this.state.isSignedIn ? (\r\n                  <NavItem>\r\n                    <NavLink\r\n                      to=\"/\"\r\n                      className=\"nav-link nav-fa\"\r\n                      onMouseEnter={() => {\r\n                        this.hoverme(6);\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        this.hoverme(6);\r\n                      }}\r\n                      onClick={() => {\r\n                        auth.signOut();\r\n                      }}\r\n                    >\r\n                      {this.state.isHover6 ? (\r\n                        this.state.isOpen ? (\r\n                          <IoMdLogOut className=\"nav-icon\" />\r\n                        ) : (\r\n                            \"logout\"\r\n                          )\r\n                      ) : (\r\n                          <IoMdLogOut className=\"nav-icon\" />\r\n                        )}\r\n                      {this.state.isOpen ? \"   logout\" : \"\"}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                ) : (\r\n                    \"\"\r\n                  )}\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}